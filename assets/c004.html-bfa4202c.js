import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,a as t}from"./app-29238d74.js";const e={},p=t(`<h1 id="c004-23届0525怪" tabindex="-1"><a class="header-anchor" href="#c004-23届0525怪" aria-hidden="true">#</a> C004.23届0525怪</h1><h2 id="_1-companymanagecontroller-java-70-74" tabindex="-1"><a class="header-anchor" href="#_1-companymanagecontroller-java-70-74" aria-hidden="true">#</a> 1.CompanyManageController.java 70-74</h2><p>gigax 6697d36f75f4ced94545489e61f8c3781ccf5ecd</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/admin/parcel/company-name.json&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">searchCompanyName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> companySearchService<span class="token punctuation">.</span><span class="token function">searchName</span><span class="token punctuation">(</span><span class="token class-name">TenantUtil</span><span class="token punctuation">.</span><span class="token function">getTenantable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">okData</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 修改后</span>
<span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/admin/parcel/company-name.json&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">searchCompanyName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> companySearchService<span class="token punctuation">.</span><span class="token function">searchName</span><span class="token punctuation">(</span><span class="token class-name">TenantUtil</span><span class="token punctuation">.</span><span class="token function">getTenantable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">okData</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="明确请求-postmapping" tabindex="-1"><a class="header-anchor" href="#明确请求-postmapping" aria-hidden="true">#</a> 明确请求 PostMapping</h3><p>RequestMapping包括了 Get, Post, Put, Delete, Patch，对Swagger文档不友好，也容易造成乱用。 按wings的RestHalf约定，除了资源类和Oauht使用GET外，全部使用Post。</p><h3 id="明确返回值-r的泛型" tabindex="-1"><a class="header-anchor" href="#明确返回值-r的泛型" aria-hidden="true">#</a> 明确返回值 R的泛型</h3><p>明确R的泛型，有利于Swagger自动推导response的示例，所以应该避免<code>R&lt;?&gt;</code>，一般呈现以下形式。</p><ul><li><code>R&lt;Void&gt;</code> - 无data，可以返回<code>R.OK</code></li><li><code>R&lt;DataType&gt;</code> - 明确的data类型</li><li><code>PageResult&lt;DataType&gt;</code> - 分页的，明确的Data类型</li></ul><h2 id="_2-companymanagecontroller-java-101-110" tabindex="-1"><a class="header-anchor" href="#_2-companymanagecontroller-java-101-110" aria-hidden="true">#</a> 2.CompanyManageController.java 101-110</h2><p>gigax 6697d36f75f4ced94545489e61f8c3781ccf5ecd</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/admin/company/delete.json&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">deleteInfo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;userId&quot;</span><span class="token punctuation">)</span> <span class="token keyword">long</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        companySearchService<span class="token punctuation">.</span><span class="token function">deleteCustomer</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token string">&quot;删除成功！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;/admin/company/delete.json&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ng</span><span class="token punctuation">(</span><span class="token string">&quot;删除失败！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="统一处理异常" tabindex="-1"><a class="header-anchor" href="#统一处理异常" aria-hidden="true">#</a> 统一处理异常</h3><p>没有必要在Controller中处理通用异常，交给HandlerExceptionResolver统一处理。</p><ul><li>CodeException - 默认无栈异常，属正常业务流，自动转换I18n</li><li>Default - 默认处理未识别异常为预设的得response</li></ul><h2 id="_3-dashboardcontroller-java-56-59" tabindex="-1"><a class="header-anchor" href="#_3-dashboardcontroller-java-56-59" aria-hidden="true">#</a> 3.DashboardController.java 56-59</h2><p>gigax 6697d36f75f4ced94545489e61f8c3781ccf5ecd</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/dashboard/out/export.json&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@DoubleKill</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">export</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">DashboardService<span class="token punctuation">.</span>QueryDate</span> queryDate<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="doublekill的使用注意key" tabindex="-1"><a class="header-anchor" href="#doublekill的使用注意key" aria-hidden="true">#</a> DoubleKill的使用注意Key</h3><p>DoubleKill基于AOP，建议使用SpEL指定key，否则方法的参数需要正确实现equals, hashCode，才能正确获取锁。</p><h2 id="_4-dashboardserviceimpl-java-332-337" tabindex="-1"><a class="header-anchor" href="#_4-dashboardserviceimpl-java-332-337" aria-hidden="true">#</a> 4.DashboardServiceImpl.java 332-337</h2><p>gigax 6697d36f75f4ced94545489e61f8c3781ccf5ecd</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">export</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ExcelInfo</span><span class="token punctuation">&gt;</span></span> excelInfos<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">ServletRequestAttributes</span> servletRequestAttributes <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ServletRequestAttributes</span><span class="token punctuation">)</span> <span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">getRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">assert</span> servletRequestAttributes <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token class-name">HttpServletResponse</span> response <span class="token operator">=</span> servletRequestAttributes<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">assert</span> response <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token class-name">EasyExcel</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">ExcelInfo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>

<span class="token comment">// 修改后</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">export</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NotNull</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ExcelInfo</span><span class="token punctuation">&gt;</span></span> excelInfos<span class="token punctuation">,</span> <span class="token annotation punctuation">@NotNull</span> <span class="token class-name">OutputStream</span> output<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">EasyExcel</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>routput<span class="token punctuation">,</span> <span class="token class-name">ExcelInfo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="严禁跨层-严禁隐式传值" tabindex="-1"><a class="header-anchor" href="#严禁跨层-严禁隐式传值" aria-hidden="true">#</a> 严禁跨层，严禁隐式传值</h3><ul><li>Web层对象不可以进入Service层，违反基本约定。</li><li>从ContextHolder取值属于方法泄露，违反基本约定。</li><li>assert 改为前置检查，以CodeException中断处理。</li><li>@NotNull 提供IDE检查，在编写时提供质量。</li></ul>`,25),o=[p];function c(l,i){return a(),s("div",null,o)}const k=n(e,[["render",c],["__file","c004.html.vue"]]);export{k as default};
