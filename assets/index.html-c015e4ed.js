import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as s,c,b as e,d as l,e as t,w as a,a as d}from"./app-e4c63cd7.js";const h={},r=d('<h1 id="b-自学成才" tabindex="-1"><a class="header-anchor" href="#b-自学成才" aria-hidden="true">#</a> B.自学成才</h1><p>主动学习，是一种重要能力，它是很多成功现象的本质推动力。 我认同『师傅领进门，修行在个人』，也主张『攻城狮精神』。</p><h2 id="b-1-代码怪的等级" tabindex="-1"><a class="header-anchor" href="#b-1-代码怪的等级" aria-hidden="true">#</a> B.1.代码怪的等级</h2><p>想象一下玩游戏时的打怪升级，出现在review中的<code>代码怪</code>也是有等级和经验值。 不同的是<code>代码怪</code>是程序猿生成的，等级和经验值和生成他的程序猿当时的状态有关。</p><p>等级的评定其实比较主观，但为了便于理解和度量，主要参考以下方面的，</p><ul><li>代码行数 - 累计量，主要指手写代码，非模板或自动生成。</li><li>反思点数 - 累计量，每迭代时，提升自己能力的10%算一个点。</li><li>方案数量 - 碰到问题时，大脑中能立即验证的可行方案数量。</li></ul><p>注意，此等级和简历中的<code>精通</code>，职场中的<code>P#</code>，没任何关系，它仅表示代码怪的凶残程度。 同时，等级中间也非严格的进阶或排斥关系，大概是，既要还要，有时有时那种。</p>',7),_={id:"初级程序猿猿初",tabindex:"-1"},u=e("a",{class:"header-anchor",href:"#初级程序猿猿初","aria-hidden":"true"},"#",-1),p=e("p",null,"10K代码行，10反思点，0方案。怪物特征，不看。",-1),f=e("ul",null,[e("li",null,"代码主要靠复制粘贴，来源于百度/CSDN等低质量平台。"),e("li",null,"代码以能运行为主，有一定的可读性，缺少健壮性和安全性。"),e("li",null,"很多IDE的代码分析提示的警告，都没有消除。"),e("li",null,"不知道解决方案，拿来就用。")],-1),b={id:"中级程序猿猿中",tabindex:"-1"},x=e("a",{class:"header-anchor",href:"#中级程序猿猿中","aria-hidden":"true"},"#",-1),m=e("p",null,"30K代码行，20反思点，1方案。怪物特征，不听。",-1),B=e("ul",null,[e("li",null,"开始出现大量的手写代码，开始复制团队代码。"),e("li",null,"代码会思考复用，有一定健壮性，能够考虑安全性。"),e("li",null,"手写代码几乎没有IDE警告。"),e("li",null,"对一类问题，心中有1个解决方案。")],-1),v={id:"高级程序猿猿高",tabindex:"-1"},N=e("a",{class:"header-anchor",href:"#高级程序猿猿高","aria-hidden":"true"},"#",-1),y=e("p",null,"50K代码行，30反思点，2方案。怪物特征，不说。",-1),K=e("ul",null,[e("li",null,"手写代码比较高效，有质量保证，有代码直觉。"),e("li",null,"为项目提供框架支持和工具类，写核心代码。"),e("li",null,"对问题有自己的见解，有主方案和备选方案。")],-1),V={id:"初级架构狮狮初",tabindex:"-1"},w=e("a",{class:"header-anchor",href:"#初级架构狮狮初","aria-hidden":"true"},"#",-1),C=d('<p>100K代码行，40反思点，3方案。怪物特征，精英。</p><ul><li>写框架代码，容易在多概念和设计中纠结。</li><li>能够把代码直觉和业务能力结合。</li><li>通常由主方案，备选方案，还有考虑回退方案。</li></ul><h2 id="b-2-成才最优路线" tabindex="-1"><a class="header-anchor" href="#b-2-成才最优路线" aria-hidden="true">#</a> B.2.成才最优路线</h2><p>有句话叫『聪明人都下笨功夫，愚蠢者总想走捷径』，真没有捷径，只有方法。 写代码其实是一种哲学写作，必须有足够的积累，才能翻译这个世界。</p><ul><li>读代码，写博客 - 官方指南，手册，必读。</li><li>功能导向写代码 - 必须持续交付，功能可用。</li><li>回顾和改良代码 - 必须反思，改良。不用妄想100%完美。</li><li>系统的读些书籍 - 把知识碎片系统化，结构化。</li><li>把知识分享出去 - 检验掌握程度的唯一标准。</li></ul><p>初级的代码，和中英文翻译很像，就是把人懂需求，翻译成机懂代码。 而高级的代码，也和高级翻译一样，是一种再创作。</p><h2 id="b-3-工具辅助思考" tabindex="-1"><a class="header-anchor" href="#b-3-工具辅助思考" aria-hidden="true">#</a> B.3.工具辅助思考</h2><p>脑力不够，工具来凑，任何工具都只是思想的局部表达和投影。 工具的好处，就是可以节省脑力，传递或保存信息时做兼容协议。</p><ul><li>语音是一维的，顺序读，文字是一维的，随机读。</li><li>图片是二维的，视频是二维，二维可模拟三维。</li></ul><p>我们的思维，总是三维或跳跃的，所有工具是一方面，思考更重要。</p>',10);function D(E,g){const i=o("Badge");return s(),c("div",null,[r,e("h3",_,[u,l(" 初级程序猿"),t(i,{type:"note",vertical:"top"},{default:a(()=>[l("🙈猿初")]),_:1})]),p,f,e("h3",b,[x,l(" 中级程序猿"),t(i,{type:"note",vertical:"top"},{default:a(()=>[l("🙉猿中")]),_:1})]),m,B,e("h3",v,[N,l(" 高级程序猿"),t(i,{type:"note",vertical:"top"},{default:a(()=>[l("🙊猿高")]),_:1})]),y,K,e("h3",V,[w,l(" 初级架构狮"),t(i,{type:"tip",vertical:"top"},{default:a(()=>[l("🦁狮初")]),_:1})]),C])}const S=n(h,[["render",D],["__file","index.html.vue"]]);export{S as default};
