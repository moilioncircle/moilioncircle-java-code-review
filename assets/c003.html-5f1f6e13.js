import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o,c as l,f as u,b as a,d as n,e as p,a as s}from"./app-4edf2fa6.js";const i={},k=a("h1",{id:"c003-22届0913怪",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#c003-22届0913怪","aria-hidden":"true"},"#"),n(" C003.22届0913怪")],-1),r=s(`<h2 id="_1-urlclasspath-java-631-638" tabindex="-1"><a class="header-anchor" href="#_1-urlclasspath-java-631-638" aria-hidden="true">#</a> 1.URLClassPath.java 631-638</h2><p>java/11.0.2-open 2019-01-18 16:22:01 /java.base/jdk/internal/loader/URLClassPath.java</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Resource</span> <span class="token function">getResource</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">boolean</span> check<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">URL</span> url<span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        url <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>base<span class="token punctuation">,</span> <span class="token class-name">ParseUtil</span><span class="token punctuation">.</span><span class="token function">encodePath</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MalformedURLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ....</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="异常缺少有用信息" tabindex="-1"><a class="header-anchor" href="#异常缺少有用信息" aria-hidden="true">#</a> 异常缺少有用信息</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Caused by: java.lang.IllegalArgumentException: name
  at URLClassPath$Loader.findResource(URLClassPath.java:600) ~[na:na]
  at URLClassPath.findResource(URLClassPath.java:291) ~[na:na]
  at URLClassLoader$2.run(URLClassLoader.java:655) ~[na:na]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>日志中，可由堆栈信息定位代码，但无法获取参数<code>name</code>运行时的值。 应该修改如下，注意<strong>数据脱敏</strong>，即对敏感信息进行替换，加密等。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;name=&quot;</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_2-balanceaccountsserviceimpl-java-107-118" tabindex="-1"><a class="header-anchor" href="#_2-balanceaccountsserviceimpl-java-107-118" aria-hidden="true">#</a> 2.BalanceAccountsServiceImpl.java 107-118</h2><p>express-home 92ee7d223aca4c8d9dba281e121a3fc659d97dd1</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">SimpleResult</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> <span class="token class-name">SimpleResult</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ... ...</span>
<span class="token comment">// 判断客户类型</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>userTypeEnum <span class="token operator">==</span> <span class="token class-name">UserTypeEnum</span><span class="token punctuation">.</span><span class="token constant">PROXY_75</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    result<span class="token punctuation">.</span><span class="token function">setSuccess</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    result<span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span><span class="token string">&quot;对于75折用户,我们使用每月账单结算!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="may-the-false-be-with-you" tabindex="-1"><a class="header-anchor" href="#may-the-false-be-with-you" aria-hidden="true">#</a> May The false be with you</h3><ul><li>Result默认为失败，以<code>false</code>或<code>failure</code>初始化</li><li>逻辑check中，直接设置消息并return</li><li>业务最后成功时，设定success及结果</li></ul><h3 id="消息文字的等宽性" tabindex="-1"><a class="header-anchor" href="#消息文字的等宽性" aria-hidden="true">#</a> 消息文字的等宽性</h3><ul><li>此处未做I18n处理，硬编码消息。</li><li>中文内应该使用中文标点</li></ul><h2 id="_3-stringtemplate-java-106-118" tabindex="-1"><a class="header-anchor" href="#_3-stringtemplate-java-106-118" aria-hidden="true">#</a> 3.StringTemplate.java 106-118</h2><p>mirana c30e3f2c0e3bf61f38f05b56b4f341113b1cd61c</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// arg = ThreadLocal.withInitial(P::new);</span>
<span class="token annotation punctuation">@NotNull</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">P</span> p <span class="token operator">=</span> arg<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        p<span class="token punctuation">.</span><span class="token function">solid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">C</span> c <span class="token operator">=</span> cac<span class="token punctuation">.</span><span class="token function">computeIfAbsent</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> k <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">C</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> txt<span class="token punctuation">,</span> fix<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> c<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        arg<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        p<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="不用搭特殊方法的便车" tabindex="-1"><a class="header-anchor" href="#不用搭特殊方法的便车" aria-hidden="true">#</a> 不用搭特殊方法的便车</h3><p><code>toString</code>方法，在IDE的debug，日志中，会被隐式调用。 非幂等的，有外部作用的方法，搭便车会存在隐藏问题。</p><h3 id="threadlocal的内存泄露" tabindex="-1"><a class="header-anchor" href="#threadlocal的内存泄露" aria-hidden="true">#</a> ThreadLocal的内存泄露</h3><p><code>arg</code>是<code>ThreadLocal</code>实例，要注意内存泄露情形</p><ul><li>①ThreadLocal引用存活较短，非static的，每次new的</li><li>②线程<code>Thread</code>存活较长，如线程池中，永活线程等</li></ul><p>以上同时满足，会有①的引用被回收，但②内ThreadLocalMap.Entry.value不回收，发生泄露。</p><p>不同时满足①②，或者主动释放, 如try-close模式，都可以避免泄露。 注意，SoftReference作为value，只是以小对象替换大对象，延缓泄露。</p><h3 id="threadlocal的方法泄露" tabindex="-1"><a class="header-anchor" href="#threadlocal的方法泄露" aria-hidden="true">#</a> ThreadLocal的方法泄露</h3><p>ThreadLocal多用作Context使用，跨方法，跨层传递信息。 俗称方法泄露，即除了input，return，throw外， 还有其他数据通路，使得方法的数据流变得隐形和复杂。</p><h3 id="threadlocal的线程切换" tabindex="-1"><a class="header-anchor" href="#threadlocal的线程切换" aria-hidden="true">#</a> ThreadLocal的线程切换</h3><p>ThreadLocal是否能正常工作，依赖于业务的线程模型，跨线程时会丢失上下文。 简单的线程池，推荐使用阿里的TransmittableThreadLocal系列。</p><h2 id="_4-metricaspect-java-23-24" tabindex="-1"><a class="header-anchor" href="#_4-metricaspect-java-23-24" aria-hidden="true">#</a> 4.MetricAspect.java 23-24</h2><p>fba_backend_v3 790e38947bdc5200536172ad1c2f638a11152803</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Around</span><span class="token punctuation">(</span><span class="token string">&quot;@annotation(metricTime)&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">metric</span><span class="token punctuation">(</span><span class="token class-name">ProceedingJoinPoint</span> joinPoint<span class="token punctuation">,</span> <span class="token class-name">MetricTime</span> metricTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="spring-aop-和-full-aspectj" tabindex="-1"><a class="header-anchor" href="#spring-aop-和-full-aspectj" aria-hidden="true">#</a> Spring AOP 和 Full AspectJ</h3><p><code>@annotation</code>为<code>in-place</code>的<code>pointcut</code>语法，此处有2种写法，</p><ul><li>全类名 - @Around(&quot;@annotation(com.xxx.xxx.annotation.MetricTime)&quot;)</li><li>参数自动 - @Around(&quot;@annotation(metricTime)&quot;)</li><li>参数手动 - @Around(value = &quot;@annotation(metricTime)&quot;, argNames = &quot;joinPoint,metricTime&quot;)</li></ul><p>当Advice中不需要annotation参数时，可直接使用全类名形式。</p>`,35),d={href:"https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#aop",target:"_blank",rel:"noopener noreferrer"},v=s(`<h2 id="_5-addresscache-java-46-54" tabindex="-1"><a class="header-anchor" href="#_5-addresscache-java-46-54" aria-hidden="true">#</a> 5.AddressCache.java 46-54</h2><p>fba_backend_v3 790e38947bdc5200536172ad1c2f638a11152803</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Cacheable</span><span class="token punctuation">(</span>cacheNames <span class="token operator">=</span> <span class="token class-name">WingsCache<span class="token punctuation">.</span>Level<span class="token punctuation">.</span>Forever</span> <span class="token operator">+</span> <span class="token string">&quot;Address&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">PageResult</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AddressVo</span><span class="token punctuation">&gt;</span></span> <span class="token function">findAddrPage</span><span class="token punctuation">(</span><span class="token class-name">AddressRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">Long</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;find address of user {} from db&quot;</span><span class="token punctuation">,</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">FbaAddressTable</span> at <span class="token operator">=</span> fbaAddressDao<span class="token punctuation">.</span><span class="token function">getAlias</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">FbaReceiverBookTable</span> bt <span class="token operator">=</span> fbaReceiverBookDao<span class="token punctuation">.</span><span class="token function">getAlias</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    val select <span class="token operator">=</span> fbaAddressDao
            <span class="token punctuation">.</span><span class="token function">ctx</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">selectFrom</span><span class="token punctuation">(</span>bt<span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span>at<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">bt<span class="token punctuation">.</span></span>AddressId</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">at<span class="token punctuation">.</span></span>Id</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>bt<span class="token punctuation">.</span>onlyLiveData<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">PageQuery</span> pageQuery <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getPageQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="缓存可能爆栈" tabindex="-1"><a class="header-anchor" href="#缓存可能爆栈" aria-hidden="true">#</a> 缓存可能爆栈</h3><p>从业务逻辑推断，此处Cacheable可能会溢出。</p><ul><li>Forever默认为无界，无过期缓存</li><li>缓存Key的组合过多</li><li>用户有关的缓存，不应该超过session生命周期</li></ul><p>非业务瓶颈不要贸然增加缓存，缓存设置一定要基于实战指标。</p><h3 id="避免select" tabindex="-1"><a class="header-anchor" href="#避免select" aria-hidden="true">#</a> 避免<code>select *</code></h3><p>wings中引入jooq，其目的之一，就是要按需查询，避免偷懒的<code>select *</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>at<span class="token punctuation">.</span><span class="token function">asterisk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">bt<span class="token punctuation">.</span></span>UserId</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">bt<span class="token punctuation">.</span></span>AddressId</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">bt<span class="token punctuation">.</span></span>Code</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>bt<span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span>at<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">bt<span class="token punctuation">.</span></span>AddressId</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">at<span class="token punctuation">.</span></span>Id</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>bt<span class="token punctuation">.</span>onlyLiveData<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-basicsoffercache-java-39-40" tabindex="-1"><a class="header-anchor" href="#_6-basicsoffercache-java-39-40" aria-hidden="true">#</a> 6.BasicsOfferCache.java 39-40</h2><p>fba_backend_v3 790e38947bdc5200536172ad1c2f638a11152803</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;获取报价缓存【%s,%s,%s,%s】&quot;</span><span class="token punctuation">,</span> warehouse<span class="token punctuation">,</span> feeType<span class="token punctuation">,</span> apply<span class="token punctuation">,</span> applyId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 不知哪个师傅教的</span>
log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;Received response for %s %s in %.1fms%n%s&quot;</span><span class="token punctuation">,</span>
        response<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>t2 <span class="token operator">-</span> t1<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1e6d</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span><span class="token function">headers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="log的性能及可采集性" tabindex="-1"><a class="header-anchor" href="#log的性能及可采集性" aria-hidden="true">#</a> log的性能及可采集性</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;获取报价缓存【{},{},{},{}】&quot;</span><span class="token punctuation">,</span> warehouse<span class="token punctuation">,</span> feeType<span class="token punctuation">,</span> apply<span class="token punctuation">,</span> applyId<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>日志性能，往往成为业务瓶颈之一，此外，日志应该具备可采集性，不要使用中文作为特征值。</p><h3 id="不知哪个师傅教的" tabindex="-1"><a class="header-anchor" href="#不知哪个师傅教的" aria-hidden="true">#</a> 不知哪个师傅教的</h3><ul><li>从来不允许<code>1e6d</code>的写法，使用普通人能懂的 <code>1_000_000D</code>，且<code>d</code>要大写</li><li>时间转换，用TimeUnit.NANOSECONDS.toMillis(t2 - t1)</li></ul>`,18),m={href:"https://square.github.io/okhttp/features/interceptors/",target:"_blank",rel:"noopener noreferrer"},h=s(`<h2 id="_7-financeaccountcache-java-30-34" tabindex="-1"><a class="header-anchor" href="#_7-financeaccountcache-java-30-34" aria-hidden="true">#</a> 7.FinanceAccountCache.java 30-34</h2><p>fba_backend_v3 dfe83f2c8a02f45bdec841b25d8acbb846d61bb5</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Cacheable</span>
<span class="token keyword">public</span> <span class="token class-name">Long</span> <span class="token function">findByUserId</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">FbaFinanceAccount</span> fbaFinanceAccount <span class="token operator">=</span> fbaFinanceAccountDao<span class="token punctuation">.</span><span class="token function">fetchOne</span><span class="token punctuation">(</span>
                table <span class="token operator">-&gt;</span> <span class="token class-name"><span class="token namespace">table<span class="token punctuation">.</span></span>Currency</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Currency</span><span class="token punctuation">.</span><span class="token constant">USD</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">table<span class="token punctuation">.</span></span>UserId</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> fbaFinanceAccount <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token class-name">EmptyValue</span><span class="token punctuation">.</span><span class="token constant">BIGINT</span> <span class="token operator">:</span> fbaFinanceAccount<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="jooq误用及select" tabindex="-1"><a class="header-anchor" href="#jooq误用及select" aria-hidden="true">#</a> jooq误用及<code>select *</code></h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 方式一，使用SelectOrderCondition包装</span>
<span class="token keyword">final</span> <span class="token class-name">FbaFinanceAccount</span> fbaFinanceAccount <span class="token operator">=</span> fbaFinanceAccountDao<span class="token punctuation">.</span><span class="token function">fetchOne</span><span class="token punctuation">(</span>t <span class="token operator">-&gt;</span>
        <span class="token class-name">SelectOrderCondition</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">t<span class="token punctuation">.</span></span>Currency</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Currency</span><span class="token punctuation">.</span><span class="token constant">USD</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">t<span class="token punctuation">.</span></span>UserId</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">t<span class="token punctuation">.</span></span>Id</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> fbaFinanceAccount <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token class-name">EmptyValue</span><span class="token punctuation">.</span><span class="token constant">BIGINT</span> <span class="token operator">:</span> fbaFinanceAccount<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 方式二，使用Dsl，可以自定义表或别名</span>
<span class="token keyword">final</span> <span class="token class-name">FbaFinanceAccountTable</span> t <span class="token operator">=</span> fbaFinanceAccountDao<span class="token punctuation">.</span><span class="token function">getTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">final</span> <span class="token class-name">Long</span> id <span class="token operator">=</span> fbaFinanceAccountDao<span class="token punctuation">.</span><span class="token function">fetchOne</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> t<span class="token punctuation">,</span>
        <span class="token class-name"><span class="token namespace">t<span class="token punctuation">.</span></span>Currency</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Currency</span><span class="token punctuation">.</span><span class="token constant">USD</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">t<span class="token punctuation">.</span></span>UserId</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token class-name"><span class="token namespace">t<span class="token punctuation">.</span></span>Id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> id <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token class-name">EmptyValue</span><span class="token punctuation">.</span><span class="token constant">BIGINT</span> <span class="token operator">:</span> id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-orderusserviceimpl-java-476-483" tabindex="-1"><a class="header-anchor" href="#_8-orderusserviceimpl-java-476-483" aria-hidden="true">#</a> 8.OrderUsServiceImpl.java 476-483</h2><p>express-home 938f45937c1a55d9ae9e203a840b8181de9e4b1e</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">BigDecimal</span> waitPayFee <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

waitPayFee <span class="token operator">=</span> <span class="token class-name">DecimalUtil</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>waitPayFee<span class="token punctuation">,</span> orderMainPo<span class="token punctuation">.</span><span class="token function">getCashFreight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
waitPayFee <span class="token operator">=</span> <span class="token class-name">DecimalUtil</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>waitPayFee<span class="token punctuation">,</span> orderMainPo<span class="token punctuation">.</span><span class="token function">getCashSurcharge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>orderMainPo<span class="token punctuation">.</span><span class="token function">getCountry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">CountryEnum</span><span class="token punctuation">.</span><span class="token function">fromCode</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    waitPayFee <span class="token operator">=</span> orderMainPo<span class="token punctuation">.</span><span class="token function">getCashDeerFee</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="用心想问题-用脑写代码" tabindex="-1"><a class="header-anchor" href="#用心想问题-用脑写代码" aria-hidden="true">#</a> 用心想问题，用脑写代码</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">BigDecimal</span> waitPayFee<span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>orderMainPo<span class="token punctuation">.</span><span class="token function">getCountry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token class-name">CountryEnum</span><span class="token punctuation">.</span><span class="token constant">US</span><span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    waitPayFee <span class="token operator">=</span> <span class="token class-name">Z</span><span class="token punctuation">.</span><span class="token function">notNullSafe</span><span class="token punctuation">(</span><span class="token constant">ZERO</span><span class="token punctuation">,</span> orderMainPo<span class="token punctuation">.</span><span class="token function">getCashDeerFee</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    waitPayFee <span class="token operator">=</span> <span class="token class-name">DecimalUtil</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>orderMainPo<span class="token punctuation">.</span><span class="token function">getCashFreight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> orderMainPo<span class="token punctuation">.</span><span class="token function">getCashSurcharge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>BigDecimal绝对不可用浮点型构造，<code>ZERO</code>是常用初始值</li><li>毫无意义的赋值，一个<code>if</code>全白瞎</li><li>Enum就是要直接用，不要使用fromCode(1)</li><li>若 waitPayFee 无后续覆盖，需要final</li></ul><h2 id="_9-balanceactsdetailcontroller-java-208-234" tabindex="-1"><a class="header-anchor" href="#_9-balanceactsdetailcontroller-java-208-234" aria-hidden="true">#</a> 9.BalanceActsDetailController.java 208-234</h2><p>express-home 938f45937c1a55d9ae9e203a840b8181de9e4b1e</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BaggagePo</span><span class="token punctuation">&gt;</span></span> pos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token class-name">FedexBillsPo</span> fedexBillsPoT<span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">BaggagePo</span> po <span class="token operator">:</span> baggagePos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>po<span class="token punctuation">.</span><span class="token function">getIsDeleted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">continue</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">FedexBillsPo</span> fedexBillsPo <span class="token operator">=</span> fedexBillsService<span class="token punctuation">.</span><span class="token function">getByTrackNum</span><span class="token punctuation">(</span>po<span class="token punctuation">.</span><span class="token function">getTrackNumUs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// ... ...</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>po<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">OrderStatusEnum</span><span class="token punctuation">.</span><span class="token constant">USUS_PICK</span><span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        pos<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> po<span class="token punctuation">)</span><span class="token punctuation">;</span>
        k<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>po<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token class-name">OrderStatusEnum</span><span class="token punctuation">.</span><span class="token constant">USUS_PICK</span><span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>
        po<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">OrderStatusEnum</span><span class="token punctuation">.</span><span class="token constant">USUS_CHECK</span><span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> 
        po<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">OrderStatusEnum</span><span class="token punctuation">.</span><span class="token constant">USUS_BILLED</span><span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span>
        po<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">OrderStatusEnum</span><span class="token punctuation">.</span><span class="token constant">USUS_COMPLETED</span><span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        weight<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span> po<span class="token punctuation">.</span><span class="token function">getWeightRaw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        j<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ... ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="controller不要写业务逻辑" tabindex="-1"><a class="header-anchor" href="#controller不要写业务逻辑" aria-hidden="true">#</a> Controller不要写业务逻辑</h3><p>此Controller有300行业务代码，涉及数据库操作，上述仅是数据转换的一段。</p><ul><li>业务代码 - 应该在Service层</li><li>Mvc的C层 - 应该仅做数据检查，转换，以完成Service调度</li></ul><h3 id="不要在循环中查数据库" tabindex="-1"><a class="header-anchor" href="#不要在循环中查数据库" aria-hidden="true">#</a> 不要在循环中查数据库</h3><p>在循环中调用中资源，是非常不好的思维习惯，容易存在<code>N+1</code>问题。</p><ul><li>如有<code>N(1)</code>缓存，以减少代码复杂度的为目的，可以循环调用。</li><li>数据量不大时，应该在外层一次性获取</li><li>数据量很大时，应该按页处理，在外层按页处理。</li></ul><h3 id="要理解数据结构的特性" tabindex="-1"><a class="header-anchor" href="#要理解数据结构的特性" aria-hidden="true">#</a> 要理解数据结构的特性</h3><p>List及ArrayList是最常用类型，后者具备RandomAccess特性</p><ul><li>移除计数器j和k，直接使用add()</li><li>最后的计数，使用 size()方法</li></ul><h3 id="要有逻辑判断及变量提取思想" tabindex="-1"><a class="header-anchor" href="#要有逻辑判断及变量提取思想" aria-hidden="true">#</a> 要有逻辑判断及变量提取思想</h3><ul><li>本身业务语义很清晰，但两个<code>if</code>写的一塌糊涂。</li><li><code>po.getStatus()</code>应该提取为final变量，保持不变性和简洁</li></ul>`,25);function b(f,g){const t=c("ExternalLinkIcon");return o(),l("div",null,[k,u(" markdownlint-disable MD013 "),r,a("p",null,[n("详细资料: "),a("a",d,[n("https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#aop"),p(t)])]),v,a("p",null,[n("事后得知，是"),a("a",m,[n("okhttp官方示例"),p(t)]),n("，我冒犯了。")]),h])}const w=e(i,[["render",b],["__file","c003.html.vue"]]);export{w as default};
