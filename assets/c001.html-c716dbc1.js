import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o,c,f as l,b as n,d as a,e as i,w as u,a as s}from"./app-4edf2fa6.js";const r={},k=n("h1",{id:"c001-22届0727怪",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#c001-22届0727怪","aria-hidden":"true"},"#"),a(" C001.22届0727怪")],-1),d=s(`<h2 id="_1-imptuspsfedexbillsserviceimpl-java-266-274" tabindex="-1"><a class="header-anchor" href="#_1-imptuspsfedexbillsserviceimpl-java-266-274" aria-hidden="true">#</a> 1.ImptUspsFedexBillsServiceImpl.java 266-274</h2><p>express-home 2022-07-27 20:11:22</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//logger.info(&quot;ImptUspsFedexBillsService.importUspsFedexBills, deal data&quot;);</span>
<span class="token class-name">BigDecimal</span> weightRaw <span class="token operator">=</span> <span class="token class-name">DecimalUtil</span><span class="token punctuation">.</span><span class="token function">object</span><span class="token punctuation">(</span>row<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token constant">ZERO</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//包裹实量</span>
<span class="token class-name">BigDecimal</span> weightIso <span class="token operator">=</span> <span class="token class-name">DecimalUtil</span><span class="token punctuation">.</span><span class="token function">object</span><span class="token punctuation">(</span>row<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token constant">ZERO</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//计费重量</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>weightIso<span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">50.00</span> <span class="token operator">&amp;&amp;</span> weightIso<span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">51.00</span><span class="token punctuation">)</span>
    <span class="token operator">||</span> <span class="token punctuation">(</span>weightIso<span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">100.00</span> <span class="token operator">&amp;&amp;</span> weightIso<span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">101.00</span><span class="token punctuation">)</span>
    <span class="token operator">||</span> <span class="token punctuation">(</span>weightIso<span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">200.00</span> <span class="token operator">&amp;&amp;</span> weightIso<span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">201.00</span><span class="token punctuation">)</span>
    <span class="token operator">||</span> <span class="token punctuation">(</span>weightIso<span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">300.00</span> <span class="token operator">&amp;&amp;</span> weightIso<span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">301.00</span><span class="token punctuation">)</span>
    <span class="token operator">||</span> <span class="token punctuation">(</span>weightIso<span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">500.00</span> <span class="token operator">&amp;&amp;</span> weightIso<span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">501.00</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    weightIso <span class="token operator">=</span> weightIso<span class="token punctuation">.</span><span class="token function">setScale</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token constant">ROUND_UP</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="魔法数字-可读性差-get-18" tabindex="-1"><a class="header-anchor" href="#魔法数字-可读性差-get-18" aria-hidden="true">#</a> 魔法数字，可读性差 get(18)</h3><p><code>row.get(18)</code> 可读性极差，应定义变量名，或使用excel的AZ坐标体系。</p><h3 id="硬核逻辑-硬编码" tabindex="-1"><a class="header-anchor" href="#硬核逻辑-硬编码" aria-hidden="true">#</a> 硬核逻辑，硬编码</h3><p><code>50.00 .. 51.00</code>的逻辑太硬核了，猜测其意图是个位的数字，在<code>(0,1)</code>区间 ROUND_UP。</p><h3 id="数值类型乱用" tabindex="-1"><a class="header-anchor" href="#数值类型乱用" aria-hidden="true">#</a> 数值类型乱用</h3><p>采用BigDecimal是为了，避免浮点类型<code>精度</code>和<code>比较</code>的问题。互转时必须统一界面。</p><h2 id="_2-dashboardcontroller-java-30-33" tabindex="-1"><a class="header-anchor" href="#_2-dashboardcontroller-java-30-33" aria-hidden="true">#</a> 2.DashboardController.java 30-33</h2><p>tail-backend 2022-07-28 08:56:33</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;获取5周提单变化趋势图&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/dashboard/out/line-chart-weeks.json&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">getLineChartWeeks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">okData</span><span class="token punctuation">(</span>dashboardService<span class="token punctuation">.</span><span class="token function">getLineChartWeeks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="并且作为对外接口-必须明确类型" tabindex="-1"><a class="header-anchor" href="#并且作为对外接口-必须明确类型" aria-hidden="true">#</a> 并且作为对外接口，必须明确类型</h3>`,13),v=n("code",null,"R<?>",-1),m=n("code",null,"A01H.方法签名宽进严出",-1),h=s(`<ul><li>以便Swagger可以自动生成Api文档。</li><li>若是有反序列化需求，则都需要使用具体实现类，以保证数据特征。</li></ul><h2 id="_3-dashboardcontroller-java-57-66" tabindex="-1"><a class="header-anchor" href="#_3-dashboardcontroller-java-57-66" aria-hidden="true">#</a> 3.DashboardController.java 57-66</h2><p>tail-backend 2022-07-28 10:28:01</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;提单导出&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/dashboard/out/export.json&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@DoubleKill</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">export</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">DashboardService<span class="token punctuation">.</span>QueryDate</span> queryDate<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        dashboardService<span class="token punctuation">.</span><span class="token function">export</span><span class="token punctuation">(</span>queryDate<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        response<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;application/json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        response<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> data <span class="token operator">=</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ng</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="避免破坏异常的统一处理" tabindex="-1"><a class="header-anchor" href="#避免破坏异常的统一处理" aria-hidden="true">#</a> 避免破坏异常的统一处理</h3><p>不要catch已经统一处理的异常。</p><p>此外内类可以静态引入，以缩短代码行长度。</p><h3 id="疑似doublekill用错" tabindex="-1"><a class="header-anchor" href="#疑似doublekill用错" aria-hidden="true">#</a> 疑似DoubleKill用错</h3><p><code>@DoubleKill</code>以lock形式限制并发 ，此处应该是<code>@Debounce</code></p><h2 id="_4-unloadingcontroller-java-83-84" tabindex="-1"><a class="header-anchor" href="#_4-unloadingcontroller-java-83-84" aria-hidden="true">#</a> 4.UnloadingController.java 83-84</h2><p>tail-backend 2022-07-28 10:48:46</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">WingsUserDetails</span> details <span class="token operator">=</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span><span class="token class-name">SecurityContextUtil</span><span class="token punctuation">.</span><span class="token function">getUserDetails</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="requirenonnull-有点丑陋" tabindex="-1"><a class="header-anchor" href="#requirenonnull-有点丑陋" aria-hidden="true">#</a> requireNonNull 有点丑陋</h3><p>修改SecurityContextUtil默认<code>@NotNull</code>，同时也提供<code>@Nullable</code>方法。</p><h2 id="_5-exceltemplateenum-java-1-1" tabindex="-1"><a class="header-anchor" href="#_5-exceltemplateenum-java-1-1" aria-hidden="true">#</a> 5.ExcelTemplateEnum.java 1-1</h2><p>tail-backend 2022-07-28 12:29:23</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>jiayu<span class="token punctuation">.</span>tail<span class="token punctuation">.</span>common<span class="token punctuation">.</span>enums<span class="token punctuation">.</span>temp</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="不要乱用缩写" tabindex="-1"><a class="header-anchor" href="#不要乱用缩写" aria-hidden="true">#</a> 不要乱用缩写</h3><p><code>temp</code>和<code>tmp</code>，行业内约定是临时(Temporary)，而模板(Template或Templet)通常缩写为<code>tmpl</code></p><h2 id="_6-customerserviceimpl-java-66-67" tabindex="-1"><a class="header-anchor" href="#_6-customerserviceimpl-java-66-67" aria-hidden="true">#</a> 6.CustomerServiceImpl.java 66-67</h2><p>tail-backend 2022-07-28 12:34:54</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Setter</span><span class="token punctuation">(</span>onMethod_ <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@Autowired</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">private</span> <span class="token class-name">DSLContext</span> dslContext<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用dao代替dsl注入" tabindex="-1"><a class="header-anchor" href="#使用dao代替dsl注入" aria-hidden="true">#</a> 使用Dao代替DSL注入</h3><p>在WingsBoot中，Dao已经封装了常用的jooq及database方法。</p><h2 id="_7-customerserviceimpl-java-164-168" tabindex="-1"><a class="header-anchor" href="#_7-customerserviceimpl-java-164-168" aria-hidden="true">#</a> 7.CustomerServiceImpl.java 164-168</h2><p>tail-backend 2022-07-28 13:41:59</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>stringRecord1 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="蹩脚的if-true-return-true" tabindex="-1"><a class="header-anchor" href="#蹩脚的if-true-return-true" aria-hidden="true">#</a> 蹩脚的if-true-return-true</h3><p>Idea会提示这种蹩脚代码，修复为 return stringRecord1 != null</p><h2 id="_8-dashboardserviceimpl-java-108-117" tabindex="-1"><a class="header-anchor" href="#_8-dashboardserviceimpl-java-108-117" aria-hidden="true">#</a> 8.DashboardServiceImpl.java 108-117</h2><p>tail-backend 2022-07-28 13:59:22</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">LocalDate</span> startDate <span class="token operator">=</span> <span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
startDate<span class="token operator">=</span> <span class="token class-name">TimeUtil</span><span class="token punctuation">.</span><span class="token function">getZoneIdLocalTime</span><span class="token punctuation">(</span>startDate<span class="token punctuation">.</span><span class="token function">atStartOfDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">ZoneId</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;Asia/Shanghai&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocalDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">LocalDate</span> endDate<span class="token punctuation">;</span>
<span class="token keyword">int</span> monthNow<span class="token operator">=</span>startDate<span class="token punctuation">.</span><span class="token function">getMonthValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>monthNow<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">)</span>
    endDate<span class="token operator">=</span>startDate<span class="token punctuation">.</span><span class="token keyword">with</span><span class="token punctuation">(</span><span class="token class-name">TemporalAdjusters</span><span class="token punctuation">.</span><span class="token function">firstDayOfYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">//获取最前一月的的第一天日期</span>
    endDate <span class="token operator">=</span> startDate<span class="token punctuation">.</span><span class="token function">plusMonths</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">withDayOfMonth</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="日期计算不是加减乘除" tabindex="-1"><a class="header-anchor" href="#日期计算不是加减乘除" aria-hidden="true">#</a> 日期计算不是加减乘除</h3><p>新手常见误区，以自己习惯的四则运算的数学知识，来计算日期，甚至时区。 比如，+年+月+日，不满足加法交换律。如，<code>+3M+1D</code> != <code>+1D+3M</code></p><ul><li><code>Asia/Shanghai</code> 在WingsBoot中，凡是指定时区的代码，几乎都是错的</li><li><code>monthNow</code> 月份和星期的比较，推荐用其Enum类<code>Month</code>和<code>DayOfWeek</code></li><li><code>plusMonths(-4)</code> 使用正向表达 <code>minusMonths(4)</code></li><li><code>startDate</code>和<code>endDate</code>的语义，应该和时间轴一致，从小到大</li><li>代码的逻辑表达很别扭，未能清晰表达意图：最近4个月，但不跨年</li><li>代码并未格式化</li></ul><p>修改意见，参考以下比较不错的同意图代码。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token class-name">LocalDate</span> endDate <span class="token operator">=</span> <span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">LocalDate</span> startDate <span class="token operator">=</span> endDate
        <span class="token punctuation">.</span><span class="token function">minusWeeks</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token keyword">with</span><span class="token punctuation">(</span><span class="token class-name">TemporalAdjusters</span><span class="token punctuation">.</span><span class="token function">previousOrSame</span><span class="token punctuation">(</span><span class="token class-name">DayOfWeek</span><span class="token punctuation">.</span><span class="token constant">SUNDAY</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">final</span> <span class="token class-name">LocalDate</span> firstDayOfYear <span class="token operator">=</span> endDate<span class="token punctuation">.</span><span class="token keyword">with</span><span class="token punctuation">(</span><span class="token class-name">TemporalAdjusters</span><span class="token punctuation">.</span><span class="token function">firstDayOfYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>startDate<span class="token punctuation">.</span><span class="token function">isBefore</span><span class="token punctuation">(</span>firstDayOfYear<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    startDate <span class="token operator">=</span> firstDayOfYear<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9-dashboardserviceimpl-java-123-124" tabindex="-1"><a class="header-anchor" href="#_9-dashboardserviceimpl-java-123-124" aria-hidden="true">#</a> 9.DashboardServiceImpl.java 123-124</h2><p>tail-backend 2022-07-28 14:47:33</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">mt<span class="token punctuation">.</span></span>CheckinTime</span><span class="token punctuation">.</span><span class="token function">between</span><span class="token punctuation">(</span>endDate<span class="token punctuation">.</span><span class="token function">atStartOfDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">minusHours</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
            startDate<span class="token punctuation">.</span><span class="token function">atTime</span><span class="token punctuation">(</span><span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">999999999</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">minusHours</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">mt<span class="token punctuation">.</span></span>Status</span><span class="token punctuation">.</span><span class="token function">ge</span><span class="token punctuation">(</span><span class="token number">2340250</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="当天的开始和结束" tabindex="-1"><a class="header-anchor" href="#当天的开始和结束" aria-hidden="true">#</a> 当天的开始和结束</h3><p>已知，mysql的<code>between</code>是两端包含(inclusive)的闭闭区间。</p><ul><li><code>minusHours(8)</code> 手动调整时区，必然业务模型错误。</li><li><code>999999999</code>，用atStartOfDay().plusDays(1).minusNanos(1)</li><li>此处<code>between</code> 建议替换为明确的<code>&gt;=</code>和<code>&lt;</code>，以简化闭区间边界计算</li><li><code>2340250</code> 为魔法数字，使用对应的Enum类</li></ul><h2 id="_10-dashboardserviceimpl-java-129-145" tabindex="-1"><a class="header-anchor" href="#_10-dashboardserviceimpl-java-129-145" aria-hidden="true">#</a> 10.DashboardServiceImpl.java 129-145</h2><p>tail-backend 2022-07-28 15:09:07</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">LineChartDetail</span><span class="token punctuation">&gt;</span></span> detailMap<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">LineChart</span> lineChart<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">LineChart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>monthNow<span class="token punctuation">,</span>j<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">;</span>i<span class="token operator">&gt;</span><span class="token number">0</span> <span class="token operator">&amp;&amp;</span> j<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">--</span><span class="token punctuation">,</span>j<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    detailMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">LineChartDetail</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
results<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>record<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
    <span class="token class-name">Integer</span> monthCnt <span class="token operator">=</span> record<span class="token punctuation">.</span><span class="token function">value1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">plusHours</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMonthValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">LineChartDetail</span> detail <span class="token operator">=</span> detailMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>monthCnt<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 设置detail代码，省略...</span>
    detailMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>monthCnt<span class="token punctuation">,</span>detail<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="java集合框架不熟练" tabindex="-1"><a class="header-anchor" href="#java集合框架不熟练" aria-hidden="true">#</a> Java集合框架不熟练</h3><ul><li>Map的get-check-set，采用computeIfAbsent代替</li><li>非stream计算，以for-loop循环，代替forEach-lambda</li><li>Iterable应该以for-in代替for-i</li></ul><h2 id="_11-ladingserviceimpl-java-330-336" tabindex="-1"><a class="header-anchor" href="#_11-ladingserviceimpl-java-330-336" aria-hidden="true">#</a> 11.LadingServiceImpl.java 330-336</h2><p>tail-backend 2022-07-28 15:45:03</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">needConfirm</span><span class="token punctuation">(</span><span class="token class-name">ScanStatus</span> scanStatus<span class="token punctuation">,</span> <span class="token class-name">ScanStatus</span> scanStatusConfirm<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>scanStatus <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>scanStatus <span class="token operator">==</span> <span class="token class-name">ScanStatus</span><span class="token punctuation">.</span><span class="token constant">MATCHED</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            <span class="token keyword">return</span> scanStatus <span class="token operator">!=</span> scanStatusConfirm<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="短if必须一行或括号" tabindex="-1"><a class="header-anchor" href="#短if必须一行或括号" aria-hidden="true">#</a> 短if必须一行或括号</h3><ul><li>短<code>if</code> 要么在一行，要么在花括号中</li><li>此处逻辑可以简化，但目前可读性优先</li></ul><h2 id="_12-ladingserviceimpl-java-460-496" tabindex="-1"><a class="header-anchor" href="#_12-ladingserviceimpl-java-460-496" aria-hidden="true">#</a> 12.LadingServiceImpl.java 460-496</h2><p>tail-backend 2022-07-28 16:01:34</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">switch</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token string">&quot;拆柜&quot;</span><span class="token operator">:</span>
        ladingVo<span class="token punctuation">.</span><span class="token function">setDismantle</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getSupplier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token string">&quot;查验&quot;</span><span class="token operator">:</span>
        ladingVo<span class="token punctuation">.</span><span class="token function">setIsExamined</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="强类型代替魔法" tabindex="-1"><a class="header-anchor" href="#强类型代替魔法" aria-hidden="true">#</a> 强类型代替魔法</h3><ul><li>行业黑话，要么Const要么Enum，不可以字符串</li><li>大段的switch-case，可使用if-else代替</li></ul><h2 id="_13-truckorderserviceimpl-java-237-242" tabindex="-1"><a class="header-anchor" href="#_13-truckorderserviceimpl-java-237-242" aria-hidden="true">#</a> 13.TruckOrderServiceImpl.java 237-242</h2><p>tail-backend 2022-07-28 16:16:14</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">InputStream</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>owtTruckOrder<span class="token punctuation">.</span><span class="token function">getBolFileC</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
     <span class="token class-name">ByteArrayOutputStream</span> out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>n <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        out<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> out<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="io工具不熟练" tabindex="-1"><a class="header-anchor" href="#io工具不熟练" aria-hidden="true">#</a> IO工具不熟练</h3><p>在业务层面，无需考虑buff复制的情况，所有IO操作都要Util</p><ul><li>spring StreamUtils.copyToByteArray()</li><li>apache IOUtils.toByteArray()</li></ul>`,64);function b(f,g){const t=p("Badge");return o(),c("div",null,[k,l(" markdownlint-disable MD013 "),d,n("p",null,[v,a("违反 "),m,a(),i(t,{type:"tip",vertical:"top"},{default:u(()=>[a("推荐")]),_:1})]),h])}const y=e(r,[["render",b],["__file","c001.html.vue"]]);export{y as default};
