import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,a as t}from"./app-iXoxbEF2.js";const p={},e=t(`<h1 id="c005-23届0609怪" tabindex="-1"><a class="header-anchor" href="#c005-23届0609怪" aria-hidden="true">#</a> C005.23届0609怪</h1><h2 id="_1-companysearchservice-java-64-64" tabindex="-1"><a class="header-anchor" href="#_1-companysearchservice-java-64-64" aria-hidden="true">#</a> 1.CompanySearchService.java 64-64</h2><p>gigax 479a5bd2922b52f1b5d0cde70dd0eaacdb8063d7</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> <span class="token function">searchLadingId</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NotNull</span> <span class="token class-name">Long</span> companyId<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> <span class="token function">searchLadingId</span><span class="token punctuation">(</span><span class="token keyword">long</span> companyId<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="时刻铭记notnull" tabindex="-1"><a class="header-anchor" href="#时刻铭记notnull" aria-hidden="true">#</a> 时刻铭记NotNull</h3><p>标记<code>@NotNull</code>有利于提高代码质量，此时<code>@NotNull Long</code> 等于 <code>long</code>。 每当看到一个变量（输入，输出，内部变量），脑子里过一遍其边界条件和特殊值，能提高编程意识。</p><h2 id="_2-dashboardserviceimpl-java-274-277" tabindex="-1"><a class="header-anchor" href="#_2-dashboardserviceimpl-java-274-277" aria-hidden="true">#</a> 2.DashboardServiceImpl.java 274-277</h2><p>gigax 479a5bd2922b52f1b5d0cde70dd0eaacdb8063d7</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> ids <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">OrderDetail</span> datum <span class="token operator">:</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ids<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>datum<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 修改后</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> ids <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">OrderDetail</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="一步操作可用lambda" tabindex="-1"><a class="header-anchor" href="#一步操作可用lambda" aria-hidden="true">#</a> 一步操作可用lambda</h3><p>wings鼓励使用普通的for-loop取代lambda的for-each，主要考虑到可读性及少量性能。 一般一步操作，只读的情况，使用lambda的可读性更佳。</p><h2 id="_3-dashboardserviceimpl-java-303-312" tabindex="-1"><a class="header-anchor" href="#_3-dashboardserviceimpl-java-303-312" aria-hidden="true">#</a> 3.DashboardServiceImpl.java 303-312</h2><p>gigax 479a5bd2922b52f1b5d0cde70dd0eaacdb8063d7</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// orders is NOT empty</span>
<span class="token class-name">StringBuilder</span> dt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">StringBuilder</span> pc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">OwtLadingOrder</span> order <span class="token operator">:</span> orders<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    dt<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>order<span class="token punctuation">.</span><span class="token function">getDeliveryType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    dt<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot; : &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    pc<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>order<span class="token punctuation">.</span><span class="token function">getPredictCtn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    pc<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot; : &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
dt<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>dt<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">,</span> dt<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
pc<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>pc<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">,</span> pc<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="字符链接-分隔-小技巧" tabindex="-1"><a class="header-anchor" href="#字符链接-分隔-小技巧" aria-hidden="true">#</a> 字符链接（分隔）小技巧</h3><p>如果简单的集合类或数组，可以使用Joiner类型的方法或工具。 如果必须手动拼接，建议joiner在前，然后使用substring的小技巧。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token class-name">StringBuilder</span> dt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">final</span> <span class="token class-name">StringBuilder</span> pc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">final</span> <span class="token class-name">String</span> joiner <span class="token operator">=</span> <span class="token string">&quot; : &quot;</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">OwtLadingOrder</span> order <span class="token operator">:</span> orders<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    dt<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>joiner<span class="token punctuation">)</span><span class="token punctuation">;</span>
    dt<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>order<span class="token punctuation">.</span><span class="token function">getDeliveryType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    pc<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>joiner<span class="token punctuation">)</span><span class="token punctuation">;</span>
    pc<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>order<span class="token punctuation">.</span><span class="token function">getPredictCtn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

datum<span class="token punctuation">.</span><span class="token function">setDeliveryType</span><span class="token punctuation">(</span>dt<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>joiner<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
datum<span class="token punctuation">.</span><span class="token function">setPredictCtn</span><span class="token punctuation">(</span>pc<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>joiner<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-easyexcelserviceimpl-java-65-71" tabindex="-1"><a class="header-anchor" href="#_4-easyexcelserviceimpl-java-65-71" aria-hidden="true">#</a> 4.EasyExcelServiceImpl.java 65-71</h2><p>gigax 479a5bd2922b52f1b5d0cde70dd0eaacdb8063d7</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ExcelAnalysisException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getCause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span><span class="token function">getCause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">CodeException</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token punctuation">(</span><span class="token class-name">CodeException</span><span class="token punctuation">)</span> e<span class="token punctuation">.</span><span class="token function">getCause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> e<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// 使用Pattern Matching for instanceof简化if分支</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getCause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">CodeException</span> ce<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> ce<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 三元操作符再次简化</span>
<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ExcelAnalysisException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> e<span class="token punctuation">.</span><span class="token function">getCause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">CodeException</span> ce <span class="token operator">?</span> ce <span class="token operator">:</span> e<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>instanceof</code> 包括了 <code>not null</code> 的情况</li><li><code>Pattern Matching for instanceof</code> 可以智能转换类型</li></ul><h2 id="_5-quoteserviceimpl-java-138-140" tabindex="-1"><a class="header-anchor" href="#_5-quoteserviceimpl-java-138-140" aria-hidden="true">#</a> 5.QuoteServiceImpl.java 138-140</h2><p>gigax 96319f11ac5109ea01f97b57f443e922ac6605d7</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@NotNull</span>
<span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">QuoteVersionVo</span><span class="token punctuation">&gt;</span></span> <span class="token function">transferVo</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OwtQuoteVersion</span><span class="token punctuation">&gt;</span></span> owtQuoteVersions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">QuoteVersionVo</span><span class="token punctuation">&gt;</span></span> vos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>owtQuoteVersions<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>owtQuoteVersions<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> vos<span class="token punctuation">;</span>
<span class="token comment">// ① 若内部对类型无要求，仅是List，可以</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>owtQuoteVersions<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">emptyList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">QuoteVersionVo</span><span class="token punctuation">&gt;</span></span> vos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>owtQuoteVersions<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ② 若要求返回值可修改，则维持现状，以明确类型ArrayList代替List</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-ladingfileserviceimpl-java-63-70" tabindex="-1"><a class="header-anchor" href="#_6-ladingfileserviceimpl-java-63-70" aria-hidden="true">#</a> 6.LadingFileServiceImpl.java 63-70</h2><p>gigax 96319f11ac5109ea01f97b57f443e922ac6605d7</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Integer</span> latestVersion <span class="token operator">=</span> owtLadingFileDao
            <span class="token punctuation">.</span><span class="token function">ctx</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token constant">DSL</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">ft<span class="token punctuation">.</span></span>Version</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>ft<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">ft<span class="token punctuation">.</span></span>LadingId</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>ladingId<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">ft<span class="token punctuation">.</span></span>FileType</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>fileType<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">fetchOneInto</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">EmptyUtil</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span>latestVersion<span class="token punctuation">)</span><span class="token punctuation">)</span> latestVersion <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token comment">// 修改后，使用Jooq的fetchOptionalInto和orElse，替换掉null判断赋值</span>
<span class="token class-name">Integer</span> latestVersion <span class="token operator">=</span> owtLadingFileDao
            <span class="token punctuation">.</span><span class="token function">ctx</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token constant">DSL</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">ft<span class="token punctuation">.</span></span>Version</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>ft<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">ft<span class="token punctuation">.</span></span>LadingId</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>ladingId<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">ft<span class="token punctuation">.</span></span>FileType</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>fileType<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">fetchOptionalInto</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-ladinginterceptserviceimpl-java-411-412" tabindex="-1"><a class="header-anchor" href="#_7-ladinginterceptserviceimpl-java-411-412" aria-hidden="true">#</a> 7.LadingInterceptServiceImpl.java 411-412</h2><p>gigax 96319f11ac5109ea01f97b57f443e922ac6605d7</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token class-name">OwtLadingOrder</span> remainingOrder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OwtLadingOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">BeanUtils</span><span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>originOrder<span class="token punctuation">,</span> remainingOrder<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ①使用jooq的from强类型复制，替换到动态的copyProperties</span>
remainingOrder<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>originOrder<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ②直接new</span>
<span class="token keyword">final</span> <span class="token class-name">OwtLadingOrder</span> remainingOrder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OwtLadingOrder</span><span class="token punctuation">(</span>originOrder<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-ladingexpressservice-java-15-18" tabindex="-1"><a class="header-anchor" href="#_8-ladingexpressservice-java-15-18" aria-hidden="true">#</a> 8.LadingExpressService.java 15-18</h2><p>gigax d66d6f88aef3d2bf0fdf88bb04b80dd92c34b224</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OwtLadingExpress</span><span class="token punctuation">&gt;</span></span> owtLadingExpresses<span class="token punctuation">,</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LadingService<span class="token punctuation">.</span>ExpressParcel</span><span class="token punctuation">&gt;</span></span> expressParcels<span class="token punctuation">,</span>
            <span class="token class-name">OwtLadingMain</span> owtLadingMain<span class="token punctuation">,</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OwtLadingOrder</span><span class="token punctuation">&gt;</span></span> owtLadingOrders<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 使用更多注解，标注方法参数</span>
<span class="token keyword">void</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NotNull</span> <span class="token class-name">OwtLadingMain</span> owtLadingMain<span class="token punctuation">,</span>
            <span class="token annotation punctuation">@NotNull</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LadingService<span class="token punctuation">.</span>ExpressParcel</span><span class="token punctuation">&gt;</span></span> expressParcels<span class="token punctuation">,</span> 
            <span class="token annotation punctuation">@Param.Out</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OwtLadingOrder</span><span class="token punctuation">&gt;</span></span> owtLadingOrdersOut<span class="token punctuation">,</span> 
            <span class="token annotation punctuation">@Param.InOut</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OwtLadingExpress</span><span class="token punctuation">&gt;</span></span> owtLadingExpressesInOut<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// @Param.Out和@Param.InOut相当于C# in及out修饰符，提醒使用者参数有修改</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9-ladingorderserviceimpl-java-450-464" tabindex="-1"><a class="header-anchor" href="#_9-ladingorderserviceimpl-java-450-464" aria-hidden="true">#</a> 9.LadingOrderServiceImpl.java 450-464</h2><p>gigax d66d6f88aef3d2bf0fdf88bb04b80dd92c34b224</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isAllUpsFedex</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OwtLadingOrder</span><span class="token punctuation">&gt;</span></span> owtLadingOrders<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OwtLadingExpress</span><span class="token punctuation">&gt;</span></span> owtLadingExpresses<span class="token punctuation">,</span> <span class="token class-name">DeliveryType</span> deliveryType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">EmptyUtil</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span>owtLadingOrders<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> result <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">OwtLadingOrder</span> order <span class="token operator">:</span> owtLadingOrders<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
        result <span class="token operator">=</span> order<span class="token punctuation">.</span><span class="token function">getDeliveryType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>deliveryType<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">EmptyUtil</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span>owtLadingExpresses<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//继续判断需要扫描的快递货物</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">OwtLadingExpress</span> express <span class="token operator">:</span> owtLadingExpresses<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
            result <span class="token operator">=</span> express<span class="token punctuation">.</span><span class="token function">getDeliveryType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>deliveryType<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改后，移除方法内全局flag，使用短路替换判断逻辑。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isAllUpsFedex</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OwtLadingOrder</span><span class="token punctuation">&gt;</span></span> owtLadingOrders<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OwtLadingExpress</span><span class="token punctuation">&gt;</span></span> owtLadingExpresses<span class="token punctuation">,</span> <span class="token annotation punctuation">@NotNull</span> <span class="token class-name">DeliveryType</span> deliveryType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">EmptyUtil</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span>owtLadingOrders<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">OwtLadingOrder</span> order <span class="token operator">:</span> owtLadingOrders<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>order<span class="token punctuation">.</span><span class="token function">getDeliveryType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> deliveryType<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">//继续判断需要扫描的快递货物</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">OwtLadingExpress</span> express <span class="token operator">:</span> <span class="token class-name">Null</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>owtLadingExpresses<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">getDeliveryType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> deliveryType<span class="token punctuation">)</span>  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_10-ladingstaticserviceimpl-java-234-242" tabindex="-1"><a class="header-anchor" href="#_10-ladingstaticserviceimpl-java-234-242" aria-hidden="true">#</a> 10.LadingStaticServiceImpl.java 234-242</h2><p>gigax d66d6f88aef3d2bf0fdf88bb04b80dd92c34b224</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">boolean</span> allPlate <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> orderIdSet <span class="token operator">=</span> orders<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">OwtLadingOrder</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> updateOrderIdSet <span class="token operator">=</span> updateOrder<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">OwtLadingOrder</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Long</span> orderId <span class="token operator">:</span> orderIdSet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>updateOrderIdSet<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>orderId<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        allPlate <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// 修改后，语义上等同于判断两个集合相等，即其内元素是否相等。</span>
<span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> updateOrderIdSet <span class="token operator">=</span> updateOrder<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">OwtLadingOrder</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> orderIdSet <span class="token operator">=</span> orders<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">OwtLadingOrder</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">final</span> <span class="token keyword">boolean</span> allPlate <span class="token operator">=</span> orderIdSet<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>updateOrderIdSet<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_11-kapaisearchservice-java-22-24" tabindex="-1"><a class="header-anchor" href="#_11-kapaisearchservice-java-22-24" aria-hidden="true">#</a> 11.KapaiSearchService.java 22-24</h2><p>gigax d66d6f88aef3d2bf0fdf88bb04b80dd92c34b224</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token keyword">class</span> <span class="token class-name">Details</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> address<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 关联唛头
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> assMark<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> airBol<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> seaBol<span class="token punctuation">;</span>
<span class="token comment">// 元芳你怎么看，第二行这个前缀有点嘎！</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,44),c=[e];function o(l,i){return s(),a("div",null,c)}const r=n(p,[["render",o],["__file","c005.html.vue"]]);export{r as default};
