import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,a as t}from"./app-f2170f21.js";const p={},e=t(`<h1 id="c004-23届0525怪" tabindex="-1"><a class="header-anchor" href="#c004-23届0525怪" aria-hidden="true">#</a> C004.23届0525怪</h1><h2 id="_1-companymanagecontroller-java-70-74" tabindex="-1"><a class="header-anchor" href="#_1-companymanagecontroller-java-70-74" aria-hidden="true">#</a> 1.CompanyManageController.java 70-74</h2><p>gigax 6697d36f75f4ced94545489e61f8c3781ccf5ecd</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/admin/parcel/company-name.json&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">searchCompanyName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> companySearchService<span class="token punctuation">.</span><span class="token function">searchName</span><span class="token punctuation">(</span><span class="token class-name">TenantUtil</span><span class="token punctuation">.</span><span class="token function">getTenantable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">okData</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 修改后</span>
<span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/admin/parcel/company-name.json&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">searchCompanyName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> companySearchService<span class="token punctuation">.</span><span class="token function">searchName</span><span class="token punctuation">(</span><span class="token class-name">TenantUtil</span><span class="token punctuation">.</span><span class="token function">getTenantable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">okData</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="明确请求-postmapping" tabindex="-1"><a class="header-anchor" href="#明确请求-postmapping" aria-hidden="true">#</a> 明确请求 PostMapping</h3><p>RequestMapping包括了 Get, Post, Put, Delete, Patch，对Swagger文档不友好，也容易造成乱用。 按wings的RestHalf约定，除了资源类和Oauht使用GET外，全部使用Post。</p><h3 id="明确返回值-r的泛型" tabindex="-1"><a class="header-anchor" href="#明确返回值-r的泛型" aria-hidden="true">#</a> 明确返回值 R的泛型</h3><p>明确R的泛型，有利于Swagger自动推导response的示例，所以应该避免<code>R&lt;?&gt;</code>，一般呈现以下形式。</p><ul><li><code>R&lt;Void&gt;</code> - 无data，可以返回<code>R.OK</code></li><li><code>R&lt;DataType&gt;</code> - 明确的data类型</li><li><code>PageResult&lt;DataType&gt;</code> - 分页的，明确的Data类型</li></ul><h2 id="_2-companymanagecontroller-java-101-110" tabindex="-1"><a class="header-anchor" href="#_2-companymanagecontroller-java-101-110" aria-hidden="true">#</a> 2.CompanyManageController.java 101-110</h2><p>gigax 6697d36f75f4ced94545489e61f8c3781ccf5ecd</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/admin/company/delete.json&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">deleteInfo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;userId&quot;</span><span class="token punctuation">)</span> <span class="token keyword">long</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        companySearchService<span class="token punctuation">.</span><span class="token function">deleteCustomer</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token string">&quot;删除成功！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;/admin/company/delete.json&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ng</span><span class="token punctuation">(</span><span class="token string">&quot;删除失败！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="统一处理异常" tabindex="-1"><a class="header-anchor" href="#统一处理异常" aria-hidden="true">#</a> 统一处理异常</h3><p>没有必要在Controller中处理通用异常，交给HandlerExceptionResolver统一处理。</p><ul><li>CodeException - 默认无栈异常，属正常业务流，自动转换I18n</li><li>Default - 默认处理未识别异常为预设的得response</li></ul><h2 id="_3-dashboardcontroller-java-56-59" tabindex="-1"><a class="header-anchor" href="#_3-dashboardcontroller-java-56-59" aria-hidden="true">#</a> 3.DashboardController.java 56-59</h2><p>gigax 6697d36f75f4ced94545489e61f8c3781ccf5ecd</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/dashboard/out/export.json&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@DoubleKill</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">export</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">DashboardService<span class="token punctuation">.</span>QueryDate</span> queryDate<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="doublekill的使用注意key" tabindex="-1"><a class="header-anchor" href="#doublekill的使用注意key" aria-hidden="true">#</a> DoubleKill的使用注意Key</h3><p>DoubleKill基于AOP，建议使用SpEL指定key，否则方法的参数需要正确实现equals, hashCode，才能正确获取锁。</p><h2 id="_4-dashboardserviceimpl-java-332-337" tabindex="-1"><a class="header-anchor" href="#_4-dashboardserviceimpl-java-332-337" aria-hidden="true">#</a> 4.DashboardServiceImpl.java 332-337</h2><p>gigax 6697d36f75f4ced94545489e61f8c3781ccf5ecd</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">export</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ExcelInfo</span><span class="token punctuation">&gt;</span></span> excelInfos<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">ServletRequestAttributes</span> servletRequestAttributes <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ServletRequestAttributes</span><span class="token punctuation">)</span> <span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">getRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">assert</span> servletRequestAttributes <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token class-name">HttpServletResponse</span> response <span class="token operator">=</span> servletRequestAttributes<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">assert</span> response <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token class-name">EasyExcel</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">ExcelInfo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>

<span class="token comment">// 修改后</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">export</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NotNull</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ExcelInfo</span><span class="token punctuation">&gt;</span></span> excelInfos<span class="token punctuation">,</span> <span class="token annotation punctuation">@NotNull</span> <span class="token class-name">OutputStream</span> output<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">EasyExcel</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>routput<span class="token punctuation">,</span> <span class="token class-name">ExcelInfo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="严禁跨层-严禁隐式传值" tabindex="-1"><a class="header-anchor" href="#严禁跨层-严禁隐式传值" aria-hidden="true">#</a> 严禁跨层，严禁隐式传值</h3><ul><li>Web层对象不可以进入Service层，违反基本约定。</li><li>从ContextHolder取值属于方法泄露，违反基本约定。</li><li>assert 改为前置检查，以CodeException中断处理。</li><li>@NotNull 提供IDE检查，在编写时提供质量。</li></ul><h2 id="_5-ordercontroller-java-103-106" tabindex="-1"><a class="header-anchor" href="#_5-ordercontroller-java-103-106" aria-hidden="true">#</a> 5.OrderController.java 103-106</h2><p>gigax 64077da17ce4920f6c8d7088664816bb0f36a36b</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/parcel/truck/check-list.json&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Collection</span><span class="token punctuation">&lt;</span><span class="token class-name">ParcelCheckQueryVo</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">checkList</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">Long</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OwtLadingOrder</span><span class="token punctuation">&gt;</span></span> data <span class="token operator">=</span> owtLadingOrderDao<span class="token punctuation">.</span><span class="token function">fetchByTruckOrderId</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">okData</span><span class="token punctuation">(</span>parcelHelper<span class="token punctuation">.</span><span class="token function">transferParcelCheckQueryVo</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="controller中不可使用dao" tabindex="-1"><a class="header-anchor" href="#controller中不可使用dao" aria-hidden="true">#</a> Controller中不可使用Dao</h3><ul><li>建议包装到Service，避免违反Mvc，Service/Dao的分层约定</li><li>若简单read，可把Dao当做Service使用，但按需select，不可泄露非必要的po信息</li></ul><h2 id="_6-parcelbindcontroller-java-147-158" tabindex="-1"><a class="header-anchor" href="#_6-parcelbindcontroller-java-147-158" aria-hidden="true">#</a> 6.ParcelBindController.java 147-158</h2><p>gigax 64077da17ce4920f6c8d7088664816bb0f36a36b</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/truck/truck/bindPlate.json&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">bindPlate</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PageDefault</span><span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token class-name">PageQuery</span> pageQuery<span class="token punctuation">,</span>
                      <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> supplier<span class="token punctuation">,</span>
                      <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">String</span> searchType<span class="token punctuation">,</span>
                      <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">String</span> container<span class="token punctuation">,</span>
                      <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> companyId<span class="token punctuation">,</span>
                      <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">String</span> address<span class="token punctuation">,</span>
                      <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">Boolean</span> isUpdate<span class="token punctuation">,</span>
                      <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> status<span class="token punctuation">,</span>
                      <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token annotation punctuation">@DateTimeFormat</span><span class="token punctuation">(</span>pattern <span class="token operator">=</span> <span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span> <span class="token class-name">LocalDateTime</span> start<span class="token punctuation">,</span>
                      <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token annotation punctuation">@DateTimeFormat</span><span class="token punctuation">(</span>pattern <span class="token operator">=</span> <span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span> <span class="token class-name">LocalDateTime</span> end<span class="token punctuation">,</span>
                      <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">LocalDate</span> startDate<span class="token punctuation">,</span>
                      <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">LocalDate</span> endDate<span class="token punctuation">,</span>
                      <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">String</span> arriveDtStatus<span class="token punctuation">,</span>
                      <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">Boolean</span> signatureFileStatus<span class="token punctuation">,</span>
                      <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> dismantle<span class="token punctuation">,</span>
                      <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">Boolean</span> isTruck<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用对象取代长参数列表" tabindex="-1"><a class="header-anchor" href="#使用对象取代长参数列表" aria-hidden="true">#</a> 使用对象取代长参数列表</h3><ul><li><code>@RequestBody BizIns ins</code> 用于承载业务数据</li><li><code>@PageDefault(size = 20) PageQuery pq</code> 使用queryString接受参数，享受别名功能</li></ul><p>以上为wings的约定，建议前端api使用TypeScript封装，如利用Axios请求及拦截处理。</p><ul><li><code>@RequestParam Boolean isTruck</code> 使用 <code>boolean</code>，因为必填不能为null</li><li>使用Json包装业务数据，可以更好的支持enum，datatime的解析</li></ul><h2 id="_7-tempsearchcontroller-java-49-60" tabindex="-1"><a class="header-anchor" href="#_7-tempsearchcontroller-java-49-60" aria-hidden="true">#</a> 7.TempSearchController.java 49-60</h2><p>gigax 350877671f7ee1cbc9f444b99d822bc20257c415</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// type enum</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> tempSearchService<span class="token punctuation">.</span><span class="token function">getList</span><span class="token punctuation">(</span>pageQuery<span class="token punctuation">,</span> ladingIds<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">QueryType<span class="token punctuation">.</span>AirBol</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> tempSearchService<span class="token punctuation">.</span><span class="token function">getByAirBol</span><span class="token punctuation">(</span>condition<span class="token punctuation">,</span> pageQuery<span class="token punctuation">,</span> ladingIds<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">QueryType<span class="token punctuation">.</span>SeaBol</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> tempSearchService<span class="token punctuation">.</span><span class="token function">getBySeaBol</span><span class="token punctuation">(</span>condition<span class="token punctuation">,</span> pageQuery<span class="token punctuation">,</span> ladingIds<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">QueryType<span class="token punctuation">.</span>Mark</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> tempSearchService<span class="token punctuation">.</span><span class="token function">getByMark</span><span class="token punctuation">(</span>condition<span class="token punctuation">,</span> pageQuery<span class="token punctuation">,</span> ladingIds<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ng</span><span class="token punctuation">(</span><span class="token string">&quot;查询失败！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="用-表示常量比较" tabindex="-1"><a class="header-anchor" href="#用-表示常量比较" aria-hidden="true">#</a> 用<code>==</code>表示常量比较</h3><p>enum类型使用<code>==</code>比较，显示的展示常量类型，而equals一般用于引用对象的值比较。</p><h3 id="加强版switch替换多if" tabindex="-1"><a class="header-anchor" href="#加强版switch替换多if" aria-hidden="true">#</a> 加强版switch替换多if</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 大多数情况为null。并列条件应该按照出现概率的从高到低，从上到下写代码</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> tempSearchService<span class="token punctuation">.</span><span class="token function">getList</span><span class="token punctuation">(</span>pageQuery<span class="token punctuation">,</span> ladingIds<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">return</span> <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// case null -&gt; tempSearchService.getList(pageQuery, ladingIds); // pattern matching</span>
    <span class="token keyword">case</span> <span class="token class-name">AirBol</span> <span class="token operator">-&gt;</span> tempSearchService<span class="token punctuation">.</span><span class="token function">getByAirBol</span><span class="token punctuation">(</span>condition<span class="token punctuation">,</span> pageQuery<span class="token punctuation">,</span> ladingIds<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token class-name">SeaBol</span> <span class="token operator">-&gt;</span> tempSearchService<span class="token punctuation">.</span><span class="token function">getBySeaBol</span><span class="token punctuation">(</span>condition<span class="token punctuation">,</span> pageQuery<span class="token punctuation">,</span> ladingIds<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token class-name">Mark</span> <span class="token operator">-&gt;</span> tempSearchService<span class="token punctuation">.</span><span class="token function">getByMark</span><span class="token punctuation">(</span>condition<span class="token punctuation">,</span> pageQuery<span class="token punctuation">,</span> ladingIds<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span> <span class="token operator">-&gt;</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ng</span><span class="token punctuation">(</span><span class="token class-name">PageResult</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;查询失败！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>加强版switch不支持null，否则会出现一下NPE（在17的preview或21可支持pattern matching）</p><blockquote><p>Cannot invoke &quot;QueryType.ordinal()&quot; because &quot;type&quot; is null</p></blockquote><h2 id="_8-userdetailcache-java-43-47" tabindex="-1"><a class="header-anchor" href="#_8-userdetailcache-java-43-47" aria-hidden="true">#</a> 8.UserDetailCache.java 43-47</h2><p>gigax 350877671f7ee1cbc9f444b99d822bc20257c415</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Cacheable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;userDetail&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">OwtUserDetail</span> <span class="token function">getByUserIdFromCache</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OwtUserDetail</span><span class="token punctuation">&gt;</span></span> fromDb <span class="token operator">=</span> <span class="token function">getFromDb</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> fromDb<span class="token punctuation">.</span><span class="token function">orElseThrow</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">CodeException</span><span class="token punctuation">(</span><span class="token class-name">CommonErrorEnum<span class="token punctuation">.</span>AssertNotFound1</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">private</span> <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OwtUserDetail</span><span class="token punctuation">&gt;</span></span> <span class="token function">getFromDb</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;find from db&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Condition</span> condition <span class="token operator">=</span> <span class="token class-name">OwtUserDetailTable<span class="token punctuation">.</span>OwtUserDetail</span><span class="token punctuation">.</span><span class="token function">onlyLive</span><span class="token punctuation">(</span><span class="token class-name">OwtUserDetailTable<span class="token punctuation">.</span>OwtUserDetail<span class="token punctuation">.</span>UserId</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>owtUserDetailDao<span class="token punctuation">.</span><span class="token function">fetchOne</span><span class="token punctuation">(</span><span class="token class-name">OwtUserDetailTable<span class="token punctuation">.</span>OwtUserDetail</span><span class="token punctuation">,</span> condition<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 修改后</span>
<span class="token annotation punctuation">@Cacheable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">UserDetail<span class="token punctuation">.</span>CacheNameDetail</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">OwtUserDetail</span> <span class="token function">getByUserIdFromCache</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;find from db&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">OwtUserDetail</span> detail <span class="token operator">=</span> owtUserDetailDao<span class="token punctuation">.</span><span class="token function">fetchOne</span><span class="token punctuation">(</span>t <span class="token operator">-&gt;</span> t<span class="token punctuation">.</span><span class="token function">onlyLive</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">t<span class="token punctuation">.</span></span>UserId</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">StateAssert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>detail<span class="token punctuation">,</span> <span class="token class-name">CommonErrorEnum<span class="token punctuation">.</span>AssertNotFound1</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> detail<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>过度拆分方法，getFromDb 仅一处使用，可以合到一起</li><li>没必要使用Optional，非lambda的反应式</li><li>Cacheable尽量使用预定义常量，使用@CacheConfig定义</li><li>logger使用lombok的@Slf4j即可</li><li>使用StateAssert做CodeException的检查</li><li>jooq不要使用table的静态实例，使用dao可正确处理别名</li><li>简单查询，采用Dao+lambda即可</li></ul>`,50),o=[e];function c(l,u){return a(),s("div",null,o)}const r=n(p,[["render",c],["__file","c004.html.vue"]]);export{r as default};
