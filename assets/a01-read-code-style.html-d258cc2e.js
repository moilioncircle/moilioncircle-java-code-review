const e=JSON.parse('{"key":"v-68c11438","path":"/a-team-rule/a01-read-code-style.html","title":"A01.编码风格既江湖规矩","lang":"zh-CN","frontmatter":{"isOriginal":true,"icon":"preview","date":"2022-05-21T00:00:00.000Z","category":["规则","易读","排版"],"description":"A01.编码风格既江湖规矩 编码风格既是江湖规矩，江湖既是非，历史上这样的争辩非常之多。 空格和Tab缩进：0x20与0x09 }要不要换行：} else {和else {和else 大小写，等号对齐等。 总之，一个项目（最好一个团队），只能保持唯一规矩，没有优劣之分。 重点在于Commit或Review时，不能因为排版不同而引发Diff和Merge。","head":[["meta",{"property":"og:url","content":"https://java-code-review.moilioncircle.com/a-team-rule/a01-read-code-style.html"}],["meta",{"property":"og:site_name","content":"Java Code Review"}],["meta",{"property":"og:title","content":"A01.编码风格既江湖规矩"}],["meta",{"property":"og:description","content":"A01.编码风格既江湖规矩 编码风格既是江湖规矩，江湖既是非，历史上这样的争辩非常之多。 空格和Tab缩进：0x20与0x09 }要不要换行：} else {和else {和else 大小写，等号对齐等。 总之，一个项目（最好一个团队），只能保持唯一规矩，没有优劣之分。 重点在于Commit或Review时，不能因为排版不同而引发Diff和Merge。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-25T07:06:31.000Z"}],["meta",{"property":"article:author","content":"trydofor"}],["meta",{"property":"article:published_time","content":"2022-05-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-25T07:06:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"A01.编码风格既江湖规矩\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-05-21T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-25T07:06:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"trydofor\\",\\"url\\":\\"https://www.trydofor.com\\"}]}"]]},"headers":[{"level":2,"title":"A01A.默认WingsBoot风格可选","slug":"a01a-默认wingsboot风格可选","link":"#a01a-默认wingsboot风格可选","children":[]},{"level":2,"title":"A01B.方法行数2屏推荐","slug":"a01b-方法行数2屏推荐","link":"#a01b-方法行数2屏推荐","children":[]},{"level":2,"title":"A01C.方法参数5个推荐","slug":"a01c-方法参数5个推荐","link":"#a01c-方法参数5个推荐","children":[]},{"level":2,"title":"A01D.泛型参数3个推荐","slug":"a01d-泛型参数3个推荐","link":"#a01d-泛型参数3个推荐","children":[]},{"level":2,"title":"A01E.类内成员10个推荐","slug":"a01e-类内成员10个推荐","link":"#a01e-类内成员10个推荐","children":[]},{"level":2,"title":"A01F.继承关系3代推荐","slug":"a01f-继承关系3代推荐","link":"#a01f-继承关系3代推荐","children":[]},{"level":2,"title":"A01G.内联表达式3个推荐","slug":"a01g-内联表达式3个推荐","link":"#a01g-内联表达式3个推荐","children":[]},{"level":2,"title":"A01H.方法签名宽进严出推荐","slug":"a01h-方法签名宽进严出推荐","link":"#a01h-方法签名宽进严出推荐","children":[]}],"git":{"createdTime":1684920285000,"updatedTime":1684998391000,"contributors":[{"name":"trydofor","email":"trydofor@gmail.com","commits":2}]},"readingTime":{"minutes":2.73,"words":820},"filePathRelative":"a-team-rule/a01-read-code-style.md","localizedDate":"2022年5月21日","excerpt":"<h1> A01.编码风格既江湖规矩</h1>\\n<p>编码风格既是江湖规矩，江湖既是非，历史上这样的争辩非常之多。</p>\\n<ul>\\n<li>空格和Tab缩进：<code>0x20</code>与<code>0x09</code></li>\\n<li><code>}</code>要不要换行：<code>} else {</code>和<code>else {</code>和<code>else</code></li>\\n<li>大小写，等号对齐等。</li>\\n</ul>\\n<p>总之，一个项目（最好一个团队），只能保持唯一规矩，没有优劣之分。<br>\\n重点在于Commit或Review时，不能因为排版不同而引发Diff和Merge。</p>","autoDesc":true}');export{e as data};
