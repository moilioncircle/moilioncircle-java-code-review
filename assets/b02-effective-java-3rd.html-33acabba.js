import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as l,c as s,b as e,d as t,e as n,f as i}from"./app-f2170f21.js";const h={},d=e("h1",{id:"b02-高效effective-java",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#b02-高效effective-java","aria-hidden":"true"},"#"),t(" B02.高效Effective Java")],-1),c=e("p",null,"此书非常薄，实操性非常强，是我多年来首推的工具书，在不同的能力水平，会看到不同的理解和收益。",-1),f={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual",target:"_blank",rel:"noopener noreferrer"},b=e("p",null,"英文阅读能力，是程序猿进阶的必备技能。就当前而言，先进的技术和社区都是英文的，只有具有英文能力， 才能够保持不掉队，并且对代码的命名也有莫大的好处。",-1),g=e("h2",{id:"b02a-规则列表",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#b02a-规则列表","aria-hidden":"true"},"#"),t(" B02A.规则列表")],-1),p={id:"chapter02-创建和销毁对象-creating-and-destroying-objects",tabindex:"-1"},m=e("a",{class:"header-anchor",href:"#chapter02-创建和销毁对象-creating-and-destroying-objects","aria-hidden":"true"},"#",-1),u={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-2/Chapter-2-Introduction.md",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-2/Chapter-2-Item-1-Consider-static-factory-methods-instead-of-constructors.md",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-2/Chapter-2-Item-2-Consider-a-builder-when-faced-with-many-constructor-parameters.md",target:"_blank",rel:"noopener noreferrer"},C={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-2/Chapter-2-Item-3-Enforce-the-singleton-property-with-a-private-constructor-or-an-enum-type.md",target:"_blank",rel:"noopener noreferrer"},E={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-2/Chapter-2-Item-4-Enforce-noninstantiability-with-a-private-constructor.md",target:"_blank",rel:"noopener noreferrer"},I={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-2/Chapter-2-Item-5-Prefer-dependency-injection-to-hardwiring-resources.md",target:"_blank",rel:"noopener noreferrer"},x={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-2/Chapter-2-Item-6-Avoid-creating-unnecessary-objects.md",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-2/Chapter-2-Item-7-Eliminate-obsolete-object-references.md",target:"_blank",rel:"noopener noreferrer"},y={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-2/Chapter-2-Item-8-Avoid-finalizers-and-cleaners.md",target:"_blank",rel:"noopener noreferrer"},J={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-2/Chapter-2-Item-9-Prefer-try-with-resources-to-try-finally.md",target:"_blank",rel:"noopener noreferrer"},w={id:"chapter03-对象的通用方法-methods-common-to-all-objects",tabindex:"-1"},P=e("a",{class:"header-anchor",href:"#chapter03-对象的通用方法-methods-common-to-all-objects","aria-hidden":"true"},"#",-1),j={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-3/Chapter-3-Introduction.md",target:"_blank",rel:"noopener noreferrer"},z={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-3/Chapter-3-Item-10-Obey-the-general-contract-when-overriding-equals.md",target:"_blank",rel:"noopener noreferrer"},U={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-3/Chapter-3-Item-11-Always-override-hashCode-when-you-override-equals.md",target:"_blank",rel:"noopener noreferrer"},A={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-3/Chapter-3-Item-12-Always-override-toString.md",target:"_blank",rel:"noopener noreferrer"},D={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-3/Chapter-3-Item-13-Override-clone-judiciously.md",target:"_blank",rel:"noopener noreferrer"},S={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-3/Chapter-3-Item-14-Consider-implementing-Comparable.md",target:"_blank",rel:"noopener noreferrer"},M={id:"chapter04-类和接口-classes-and-interfaces",tabindex:"-1"},O=e("a",{class:"header-anchor",href:"#chapter04-类和接口-classes-and-interfaces","aria-hidden":"true"},"#",-1),F={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-4/Chapter-4-Introduction.md",target:"_blank",rel:"noopener noreferrer"},R={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-4/Chapter-4-Item-15-Minimize-the-accessibility-of-classes-and-members.md",target:"_blank",rel:"noopener noreferrer"},q={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-4/Chapter-4-Item-16-In-public-classes-use-accessor-methods-not-public-fields.md",target:"_blank",rel:"noopener noreferrer"},B={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-4/Chapter-4-Item-17-Minimize-mutability.md",target:"_blank",rel:"noopener noreferrer"},L={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-4/Chapter-4-Item-18-Favor-composition-over-inheritance.md",target:"_blank",rel:"noopener noreferrer"},N={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-4/Chapter-4-Item-19-Design-and-document-for-inheritance-or-else-prohibit-it.md",target:"_blank",rel:"noopener noreferrer"},V={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-4/Chapter-4-Item-20-Prefer-interfaces-to-abstract-classes.md",target:"_blank",rel:"noopener noreferrer"},W={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-4/Chapter-4-Item-21-Design-interfaces-for-posterity.md",target:"_blank",rel:"noopener noreferrer"},T={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-4/Chapter-4-Item-22-Use-interfaces-only-to-define-types.md",target:"_blank",rel:"noopener noreferrer"},G={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-4/Chapter-4-Item-23-Prefer-class-hierarchies-to-tagged-classes.md",target:"_blank",rel:"noopener noreferrer"},K={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-4/Chapter-4-Item-24-Favor-static-member-classes-over-nonstatic.md",target:"_blank",rel:"noopener noreferrer"},H={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-4/Chapter-4-Item-25-Limit-source-files-to-a-single-top-level-class.md",target:"_blank",rel:"noopener noreferrer"},Q={id:"chapter05-泛型-generics",tabindex:"-1"},X=e("a",{class:"header-anchor",href:"#chapter05-泛型-generics","aria-hidden":"true"},"#",-1),Y={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-5/Chapter-5-Introduction.md",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-5/Chapter-5-Item-26-Do-not-use-raw-types.md",target:"_blank",rel:"noopener noreferrer"},$={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-5/Chapter-5-Item-27-Eliminate-unchecked-warnings.md",target:"_blank",rel:"noopener noreferrer"},ee={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-5/Chapter-5-Item-28-Prefer-lists-to-arrays.md",target:"_blank",rel:"noopener noreferrer"},te={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-5/Chapter-5-Item-29-Favor-generic-types.md",target:"_blank",rel:"noopener noreferrer"},re={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-5/Chapter-5-Item-30-Favor-generic-methods.md",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-5/Chapter-5-Item-31-Use-bounded-wildcards-to-increase-API-flexibility.md",target:"_blank",rel:"noopener noreferrer"},ie={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-5/Chapter-5-Item-32-Combine-generics-and-varargs-judiciously.md",target:"_blank",rel:"noopener noreferrer"},ae={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-5/Chapter-5-Item-33-Consider-typesafe-heterogeneous-containers.md",target:"_blank",rel:"noopener noreferrer"},oe={id:"chapter06-枚举和注解-enums-and-annotations",tabindex:"-1"},le=e("a",{class:"header-anchor",href:"#chapter06-枚举和注解-enums-and-annotations","aria-hidden":"true"},"#",-1),se={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-6/Chapter-6-Introduction.md",target:"_blank",rel:"noopener noreferrer"},he={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-6/Chapter-6-Item-34-Use-enums-instead-of-int-constants.md",target:"_blank",rel:"noopener noreferrer"},de={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-6/Chapter-6-Item-35-Use-instance-fields-instead-of-ordinals.md",target:"_blank",rel:"noopener noreferrer"},ce={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-6/Chapter-6-Item-36-Use-EnumSet-instead-of-bit-fields.md",target:"_blank",rel:"noopener noreferrer"},fe={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-6/Chapter-6-Item-37-Use-EnumMap-instead-of-ordinal-indexing.md",target:"_blank",rel:"noopener noreferrer"},be={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-6/Chapter-6-Item-38-Emulate-extensible-enums-with-interfaces.md",target:"_blank",rel:"noopener noreferrer"},ge={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-6/Chapter-6-Item-39-Prefer-annotations-to-naming-patterns.md",target:"_blank",rel:"noopener noreferrer"},pe={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-6/Chapter-6-Item-40-Consistently-use-the-Override-annotation.md",target:"_blank",rel:"noopener noreferrer"},me={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-6/Chapter-6-Item-41-Use-marker-interfaces-to-define-types.md",target:"_blank",rel:"noopener noreferrer"},ue={id:"chapter07-λ-表达式和流-lambdas-and-streams",tabindex:"-1"},ve=e("a",{class:"header-anchor",href:"#chapter07-λ-表达式和流-lambdas-and-streams","aria-hidden":"true"},"#",-1),_e={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-7/Chapter-7-Introduction.md",target:"_blank",rel:"noopener noreferrer"},Ce={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-7/Chapter-7-Item-42-Prefer-lambdas-to-anonymous-classes.md",target:"_blank",rel:"noopener noreferrer"},Ee={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-7/Chapter-7-Item-43-Prefer-method-references-to-lambdas.md",target:"_blank",rel:"noopener noreferrer"},Ie={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-7/Chapter-7-Item-44-Favor-the-use-of-standard-functional-interfaces.md",target:"_blank",rel:"noopener noreferrer"},xe={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-7/Chapter-7-Item-45-Use-streams-judiciously.md",target:"_blank",rel:"noopener noreferrer"},ke={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-7/Chapter-7-Item-46-Prefer-side-effect-free-functions-in-streams.md",target:"_blank",rel:"noopener noreferrer"},ye={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-7/Chapter-7-Item-47-Prefer-Collection-to-Stream-as-a-return-type.md",target:"_blank",rel:"noopener noreferrer"},Je={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-7/Chapter-7-Item-48-Use-caution-when-making-streams-parallel.md",target:"_blank",rel:"noopener noreferrer"},we={id:"chapter08-方法-methods",tabindex:"-1"},Pe=e("a",{class:"header-anchor",href:"#chapter08-方法-methods","aria-hidden":"true"},"#",-1),je={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-8/Chapter-8-Introduction.md",target:"_blank",rel:"noopener noreferrer"},ze={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-8/Chapter-8-Item-49-Check-parameters-for-validity.md",target:"_blank",rel:"noopener noreferrer"},Ue={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-8/Chapter-8-Item-50-Make-defensive-copies-when-needed.md",target:"_blank",rel:"noopener noreferrer"},Ae={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-8/Chapter-8-Item-51-Design-method-signatures-carefully.md",target:"_blank",rel:"noopener noreferrer"},De={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-8/Chapter-8-Item-52-Use-overloading-judiciously.md",target:"_blank",rel:"noopener noreferrer"},Se={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-8/Chapter-8-Item-53-Use-varargs-judiciously.md",target:"_blank",rel:"noopener noreferrer"},Me={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-8/Chapter-8-Item-54-Return-empty-collections-or-arrays-not-nulls.md",target:"_blank",rel:"noopener noreferrer"},Oe={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-8/Chapter-8-Item-55-Return-optionals-judiciously.md",target:"_blank",rel:"noopener noreferrer"},Fe={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-8/Chapter-8-Item-56-Write-doc-comments-for-all-exposed-API-elements.md",target:"_blank",rel:"noopener noreferrer"},Re={id:"chapter09-通用程序设计-general-programming",tabindex:"-1"},qe=e("a",{class:"header-anchor",href:"#chapter09-通用程序设计-general-programming","aria-hidden":"true"},"#",-1),Be={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-9/Chapter-9-Introduction.md",target:"_blank",rel:"noopener noreferrer"},Le={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-9/Chapter-9-Item-57-Minimize-the-scope-of-local-variables.md",target:"_blank",rel:"noopener noreferrer"},Ne={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-9/Chapter-9-Item-58-Prefer-for-each-loops-to-traditional-for-loops.md",target:"_blank",rel:"noopener noreferrer"},Ve={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-9/Chapter-9-Item-59-Know-and-use-the-libraries.md",target:"_blank",rel:"noopener noreferrer"},We={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-9/Chapter-9-Item-60-Avoid-float-and-double-if-exact-answers-are-required.md",target:"_blank",rel:"noopener noreferrer"},Te={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-9/Chapter-9-Item-61-Prefer-primitive-types-to-boxed-primitives.md",target:"_blank",rel:"noopener noreferrer"},Ge={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-9/Chapter-9-Item-62-Avoid-strings-where-other-types-are-more-appropriate.md",target:"_blank",rel:"noopener noreferrer"},Ke={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-9/Chapter-9-Item-63-Beware-the-performance-of-string-concatenation.md",target:"_blank",rel:"noopener noreferrer"},He={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-9/Chapter-9-Item-64-Refer-to-objects-by-their-interfaces.md",target:"_blank",rel:"noopener noreferrer"},Qe={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-9/Chapter-9-Item-65-Prefer-interfaces-to-reflection.md",target:"_blank",rel:"noopener noreferrer"},Xe={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-9/Chapter-9-Item-66-Use-native-methods-judiciously.md",target:"_blank",rel:"noopener noreferrer"},Ye={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-9/Chapter-9-Item-67-Optimize-judiciously.md",target:"_blank",rel:"noopener noreferrer"},Ze={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-9/Chapter-9-Item-68-Adhere-to-generally-accepted-naming-conventions.md",target:"_blank",rel:"noopener noreferrer"},$e={id:"chapter10-异常-exceptions",tabindex:"-1"},et=e("a",{class:"header-anchor",href:"#chapter10-异常-exceptions","aria-hidden":"true"},"#",-1),tt={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-10/Chapter-10-Introduction.md",target:"_blank",rel:"noopener noreferrer"},rt={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-10/Chapter-10-Item-69-Use-exceptions-only-for-exceptional-conditions.md",target:"_blank",rel:"noopener noreferrer"},nt={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-10/Chapter-10-Item-70-Use-checked-exceptions-for-recoverable-conditions-and-runtime-exceptions-for-programming-errors.md",target:"_blank",rel:"noopener noreferrer"},it={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-10/Chapter-10-Item-71-Avoid-unnecessary-use-of-checked-exceptions.md",target:"_blank",rel:"noopener noreferrer"},at={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-10/Chapter-10-Item-72-Favor-the-use-of-standard-exceptions.md",target:"_blank",rel:"noopener noreferrer"},ot={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-10/Chapter-10-Item-73-Throw-exceptions-appropriate-to-the-abstraction.md",target:"_blank",rel:"noopener noreferrer"},lt={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-10/Chapter-10-Item-74-Document-all-exceptions-thrown-by-each-method.md",target:"_blank",rel:"noopener noreferrer"},st={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-10/Chapter-10-Item-75-Include-failure-capture-information-in-detail-messages.md",target:"_blank",rel:"noopener noreferrer"},ht={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-10/Chapter-10-Item-76-Strive-for-failure-atomicity.md",target:"_blank",rel:"noopener noreferrer"},dt={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-10/Chapter-10-Item-77-Don%E2%80%99t-ignore-exceptions.md",target:"_blank",rel:"noopener noreferrer"},ct={id:"chapter11-并发-concurrency",tabindex:"-1"},ft=e("a",{class:"header-anchor",href:"#chapter11-并发-concurrency","aria-hidden":"true"},"#",-1),bt={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-11/Chapter-11-Introduction.md",target:"_blank",rel:"noopener noreferrer"},gt={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-11/Chapter-11-Item-78-Synchronize-access-to-shared-mutable-data.md",target:"_blank",rel:"noopener noreferrer"},pt={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-11/Chapter-11-Item-79-Avoid-excessive-synchronization.md",target:"_blank",rel:"noopener noreferrer"},mt={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-11/Chapter-11-Item-80-Prefer-executors,-tasks,-and-streams-to-threads.md",target:"_blank",rel:"noopener noreferrer"},ut={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-11/Chapter-11-Item-81-Prefer-concurrency-utilities-to-wait-and-notify.md",target:"_blank",rel:"noopener noreferrer"},vt={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-11/Chapter-11-Item-82-Document-thread-safety.md",target:"_blank",rel:"noopener noreferrer"},_t={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-11/Chapter-11-Item-83-Use-lazy-initialization-judiciously.md",target:"_blank",rel:"noopener noreferrer"},Ct={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-11/Chapter-11-Item-84-Don%E2%80%99t-depend-on-the-thread-scheduler.md",target:"_blank",rel:"noopener noreferrer"},Et={id:"chapter12-序列化-serialization",tabindex:"-1"},It=e("a",{class:"header-anchor",href:"#chapter12-序列化-serialization","aria-hidden":"true"},"#",-1),xt={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-12/Chapter-12-Introduction.md",target:"_blank",rel:"noopener noreferrer"},kt={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-12/Chapter-12-Item-85-Prefer-alternatives-to-Java-serialization.md",target:"_blank",rel:"noopener noreferrer"},yt={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-12/Chapter-12-Item-86-Implement-Serializable-with-great-caution.md",target:"_blank",rel:"noopener noreferrer"},Jt={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-12/Chapter-12-Item-87-Consider-using-a-custom-serialized-form.md",target:"_blank",rel:"noopener noreferrer"},wt={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-12/Chapter-12-Item-88-Write-readObject-methods-defensively.md",target:"_blank",rel:"noopener noreferrer"},Pt={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-12/Chapter-12-Item-89-For-instance-control-prefer-enum-types-to-readResolve.md",target:"_blank",rel:"noopener noreferrer"},jt={href:"https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-12/Chapter-12-Item-90-Consider-serialization-proxies-instead-of-serialized-instances.md",target:"_blank",rel:"noopener noreferrer"};function zt(Ut,At){const r=o("ExternalLinkIcon");return l(),s("div",null,[d,c,e("p",null,[t("以下Repo是中英文对照版，推荐优先阅读英文，再对照中文理解，技术词汇语义以英文单词为准。 "),e("a",f,[t("https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual"),n(r)])]),b,g,i(" markdownlint-disable MD013 "),e("h3",p,[m,t(" Chapter02. 创建和销毁对象 "),e("a",u,[t("Creating and Destroying Objects"),n(r)])]),e("ul",null,[e("li",null,[t("Item01: 考虑以静态工厂方法代替构造函数 "),e("a",v,[t("Consider static factory methods instead of constructors"),n(r)])]),e("li",null,[t("Item02: 在面对多个构造函数参数时，请考虑构建器 "),e("a",_,[t("Consider a builder when faced with many constructor parameters"),n(r)])]),e("li",null,[t("Item03: 使用私有构造函数或枚举类型实施单例属性 "),e("a",C,[t("Enforce the singleton property with a private constructor or an enum type"),n(r)])]),e("li",null,[t("Item04: 用私有构造函数实施不可实例化 "),e("a",E,[t("Enforce noninstantiability with a private constructor"),n(r)])]),e("li",null,[t("Item05: 依赖注入优于硬连接资源 "),e("a",I,[t("Prefer dependency injection to hardwiring resources"),n(r)])]),e("li",null,[t("Item06: 避免创建不必要的对象 "),e("a",x,[t("Avoid creating unnecessary objects"),n(r)])]),e("li",null,[t("Item07: 排除过时的对象引用 "),e("a",k,[t("Eliminate obsolete object references"),n(r)])]),e("li",null,[t("Item08: 避免使用终结器和清除器 "),e("a",y,[t("Avoid finalizers and cleaners"),n(r)])]),e("li",null,[t("Item09: 使用 try-with-resources 优于 try-finally "),e("a",J,[t("Prefer try with resources to try finally"),n(r)])])]),e("h3",w,[P,t(" Chapter03. 对象的通用方法 "),e("a",j,[t("Methods Common to All Objects"),n(r)])]),e("ul",null,[e("li",null,[t("Item10: 覆盖 equals 方法时应遵守的约定 "),e("a",z,[t("Obey the general contract when overriding equals"),n(r)])]),e("li",null,[t("Item11: 当覆盖 equals 方法时，总要覆盖 hashCode 方法 "),e("a",U,[t("Always override hashCode when you override equals"),n(r)])]),e("li",null,[t("Item12: 始终覆盖 toString 方法 "),e("a",A,[t("Always override toString"),n(r)])]),e("li",null,[t("Item13: 明智地覆盖 clone 方法 "),e("a",D,[t("Override clone judiciously"),n(r)])]),e("li",null,[t("Item14: 考虑实现 Comparable 接口 "),e("a",S,[t("Consider implementing Comparable"),n(r)])])]),e("h3",M,[O,t(" Chapter04. 类和接口 "),e("a",F,[t("Classes and Interfaces"),n(r)])]),e("ul",null,[e("li",null,[t("Item15: 尽量减少类和成员的可访问性 "),e("a",R,[t("Minimize the accessibility of classes and members"),n(r)])]),e("li",null,[t("Item16: 在公共类中，使用访问器方法，而不是公共字段 "),e("a",q,[t("In public classes use accessor methods not public fields"),n(r)])]),e("li",null,[t("Item17: 减少可变性 "),e("a",B,[t("Minimize mutability"),n(r)])]),e("li",null,[t("Item18: 优先选择复合而不是继承 "),e("a",L,[t("Favor composition over inheritance"),n(r)])]),e("li",null,[t("Item19: 继承要设计良好并且具有文档，否则禁止使用 "),e("a",N,[t("Design and document for inheritance or else prohibit it"),n(r)])]),e("li",null,[t("Item20: 接口优于抽象类 "),e("a",V,[t("Prefer interfaces to abstract classes"),n(r)])]),e("li",null,[t("Item21: 为后代设计接口 "),e("a",W,[t("Design interfaces for posterity"),n(r)])]),e("li",null,[t("Item22: 接口只用于定义类型 "),e("a",T,[t("Use interfaces only to define types"),n(r)])]),e("li",null,[t("Item23: 类层次结构优于带标签的类 "),e("a",G,[t("Prefer class hierarchies to tagged classes"),n(r)])]),e("li",null,[t("Item24: 静态成员类优于非静态成员类 "),e("a",K,[t("Favor static member classes over nonstatic"),n(r)])]),e("li",null,[t("Item25: 源文件仅限有单个顶层类 "),e("a",H,[t("Limit source files to a single top level class"),n(r)])])]),e("h3",Q,[X,t(" Chapter05. 泛型 "),e("a",Y,[t("Generics"),n(r)])]),e("ul",null,[e("li",null,[t("Item26: 不要使用原始类型 "),e("a",Z,[t("Do not use raw types"),n(r)])]),e("li",null,[t("Item27: 消除 unchecked 警告 "),e("a",$,[t("Eliminate unchecked warnings"),n(r)])]),e("li",null,[t("Item28: list 优于数组 "),e("a",ee,[t("Prefer lists to arrays"),n(r)])]),e("li",null,[t("Item29: 优先使用泛型 "),e("a",te,[t("Favor generic types"),n(r)])]),e("li",null,[t("Item30: 优先使用泛型方法 "),e("a",re,[t("Favor generic methods"),n(r)])]),e("li",null,[t("Item31: 使用有界通配符增加 API 的灵活性 "),e("a",ne,[t("Use bounded wildcards to increase API flexibility"),n(r)])]),e("li",null,[t("Item32: 明智地合用泛型和可变参数 "),e("a",ie,[t("Combine generics and varargs judiciously"),n(r)])]),e("li",null,[t("Item33: 考虑类型安全的异构容器 "),e("a",ae,[t("Consider typesafe heterogeneous containers"),n(r)])])]),e("h3",oe,[le,t(" Chapter06. 枚举和注解 "),e("a",se,[t("Enums and Annotations"),n(r)])]),e("ul",null,[e("li",null,[t("Item34: 用枚举类型代替 int 常量 "),e("a",he,[t("Use enums instead of int constants"),n(r)])]),e("li",null,[t("Item35: 使用实例字段替代序数 "),e("a",de,[t("Use instance fields instead of ordinals"),n(r)])]),e("li",null,[t("Item36: 用 EnumSet 替代位字段 "),e("a",ce,[t("Use EnumSet instead of bit fields"),n(r)])]),e("li",null,[t("Item37: 使用 EnumMap 替换序数索引 "),e("a",fe,[t("Use EnumMap instead of ordinal indexing"),n(r)])]),e("li",null,[t("Item38: 使用接口模拟可扩展枚举 "),e("a",be,[t("Emulate extensible enums with interfaces"),n(r)])]),e("li",null,[t("Item39: 注解优于命名模式 "),e("a",ge,[t("Prefer annotations to naming patterns"),n(r)])]),e("li",null,[t("Item40: 坚持使用 @Override 注解 "),e("a",pe,[t("Consistently use the Override annotation"),n(r)])]),e("li",null,[t("Item41: 使用标记接口定义类型 "),e("a",me,[t("Use marker interfaces to define types"),n(r)])])]),e("h3",ue,[ve,t(" Chapter07. λ 表达式和流 "),e("a",_e,[t("Lambdas and Streams"),n(r)])]),e("ul",null,[e("li",null,[t("Item42: λ 表达式优于匿名类 "),e("a",Ce,[t("Prefer lambdas to anonymous classes"),n(r)])]),e("li",null,[t("Item43: 方法引用优于 λ 表达式 "),e("a",Ee,[t("Prefer method references to lambdas"),n(r)])]),e("li",null,[t("Item44: 优先使用标准函数式接口 "),e("a",Ie,[t("Favor the use of standard functional interfaces"),n(r)])]),e("li",null,[t("Item45: 明智地使用流 "),e("a",xe,[t("Use streams judiciously"),n(r)])]),e("li",null,[t("Item46: 在流中使用无副作用的函数 "),e("a",ke,[t("Prefer side effect free functions in streams"),n(r)])]),e("li",null,[t("Item47: 优先选择 Collection 而不是流作为返回类型 "),e("a",ye,[t("Prefer Collection to Stream as a return type"),n(r)])]),e("li",null,[t("Item48: 谨慎使用并行流 "),e("a",Je,[t("Use caution when making streams parallel"),n(r)])])]),e("h3",we,[Pe,t(" Chapter08. 方法 "),e("a",je,[t("Methods"),n(r)])]),e("ul",null,[e("li",null,[t("Item49: 检查参数的有效性 "),e("a",ze,[t("Check parameters for validity"),n(r)])]),e("li",null,[t("Item50: 在需要时制作防御性副本 "),e("a",Ue,[t("Make defensive copies when needed"),n(r)])]),e("li",null,[t("Item51: 仔细设计方法签名 "),e("a",Ae,[t("Design method signatures carefully"),n(r)])]),e("li",null,[t("Item52: 明智地使用重载 "),e("a",De,[t("Use overloading judiciously"),n(r)])]),e("li",null,[t("Item53: 明智地使用可变参数 "),e("a",Se,[t("Use varargs judiciously"),n(r)])]),e("li",null,[t("Item54: 返回空集合或数组，而不是 null "),e("a",Me,[t("Return empty collections or arrays, not nulls"),n(r)])]),e("li",null,[t("Item55: 明智地的返回 Optional "),e("a",Oe,[t("Return optionals judiciously"),n(r)])]),e("li",null,[t("Item56: 为所有公开的 API 元素编写文档注释 "),e("a",Fe,[t("Write doc comments for all exposed API elements"),n(r)])])]),e("h3",Re,[qe,t(" Chapter09. 通用程序设计 "),e("a",Be,[t("General Programming"),n(r)])]),e("ul",null,[e("li",null,[t("Item57: 将局部变量的作用域最小化 "),e("a",Le,[t("Minimize the scope of local variables"),n(r)])]),e("li",null,[t("Item58: for-each 循环优于传统的 for 循环 "),e("a",Ne,[t("Prefer for-each loops to traditional for loops"),n(r)])]),e("li",null,[t("Item59: 了解并使用库 "),e("a",Ve,[t("Know and use the libraries"),n(r)])]),e("li",null,[t("Item60: 若需要精确答案就应避免使用 float 和 double 类型 "),e("a",We,[t("Avoid float and double if exact answers are required"),n(r)])]),e("li",null,[t("Item61: 基本数据类型优于包装类 "),e("a",Te,[t("Prefer primitive types to boxed primitives"),n(r)])]),e("li",null,[t("Item62: 其他类型更合适时应避免使用字符串 "),e("a",Ge,[t("Avoid strings where other types are more appropriate"),n(r)])]),e("li",null,[t("Item63: 当心字符串连接引起的性能问题 "),e("a",Ke,[t("Beware the performance of string concatenation"),n(r)])]),e("li",null,[t("Item64: 通过接口引用对象 "),e("a",He,[t("Refer to objects by their interfaces"),n(r)])]),e("li",null,[t("Item65: 接口优于反射 "),e("a",Qe,[t("Prefer interfaces to reflection"),n(r)])]),e("li",null,[t("Item66: 明智地使用本地方法 "),e("a",Xe,[t("Use native methods judiciously"),n(r)])]),e("li",null,[t("Item67: 明智地进行优化 "),e("a",Ye,[t("Optimize judiciously"),n(r)])]),e("li",null,[t("Item68: 遵守被广泛认可的命名约定 "),e("a",Ze,[t("Adhere to generally accepted naming conventions"),n(r)])])]),e("h3",$e,[et,t(" Chapter10. 异常 "),e("a",tt,[t("Exceptions"),n(r)])]),e("ul",null,[e("li",null,[t("Item69: 仅在确有异常条件下使用异常 "),e("a",rt,[t("Use exceptions only for exceptional conditions"),n(r)])]),e("li",null,[t("Item70: 对可恢复情况使用 checked 异常，对编程错误使用运行时异常 "),e("a",nt,[t("Use checked exceptions for recoverable conditions and runtime exceptions for programming errors"),n(r)])]),e("li",null,[t("Item71: 避免不必要地使用 checked 异常 "),e("a",it,[t("Avoid unnecessary use of checked exceptions"),n(r)])]),e("li",null,[t("Item72: 鼓励复用标准异常 "),e("a",at,[t("Favor the use of standard exceptions"),n(r)])]),e("li",null,[t("Item73: 抛出能用抽象解释的异常 "),e("a",ot,[t("Throw exceptions appropriate to the abstraction"),n(r)])]),e("li",null,[t("Item74: 为每个方法记录会抛出的所有异常 "),e("a",lt,[t("Document all exceptions thrown by each method"),n(r)])]),e("li",null,[t("Item75: 异常详细消息中应包含捕获失败的信息 "),e("a",st,[t("Include failure capture information in detail messages"),n(r)])]),e("li",null,[t("Item76: 尽力保证故障原子性 "),e("a",ht,[t("Strive for failure atomicity"),n(r)])]),e("li",null,[t("Item77: 不要忽略异常 "),e("a",dt,[t("Don’t ignore exceptions"),n(r)])])]),e("h3",ct,[ft,t(" Chapter11. 并发 "),e("a",bt,[t("Concurrency"),n(r)])]),e("ul",null,[e("li",null,[t("Item78: 对共享可变数据的同步访问 "),e("a",gt,[t("Synchronize access to shared mutable data"),n(r)])]),e("li",null,[t("Item79: 避免过度同步 "),e("a",pt,[t("Avoid excessive synchronization"),n(r)])]),e("li",null,[t("Item80: Executor、task、流优于直接使用线程 "),e("a",mt,[t("Prefer executors, tasks, and streams to threads"),n(r)])]),e("li",null,[t("Item81: 并发实用工具优于 wait 和 notify "),e("a",ut,[t("Prefer concurrency utilities to wait and notify"),n(r)])]),e("li",null,[t("Item82: 文档应包含线程安全属性 "),e("a",vt,[t("Document thread safety"),n(r)])]),e("li",null,[t("Item83: 明智地使用延迟初始化 "),e("a",_t,[t("Use lazy initialization judiciously"),n(r)])]),e("li",null,[t("Item84: 不要依赖线程调度器 "),e("a",Ct,[t("Don’t depend on the thread scheduler"),n(r)])])]),e("h3",Et,[It,t(" Chapter12. 序列化 "),e("a",xt,[t("Serialization"),n(r)])]),e("ul",null,[e("li",null,[t("Item85: 优先选择 Java 序列化的替代方案 "),e("a",kt,[t("Prefer alternatives to Java serialization"),n(r)])]),e("li",null,[t("Item86: 非常谨慎地实现 Serializable "),e("a",yt,[t("Implement Serializable with great caution"),n(r)])]),e("li",null,[t("Item87: 考虑使用自定义序列化形式 "),e("a",Jt,[t("Consider using a custom serialized form"),n(r)])]),e("li",null,[t("Item88: 防御性地编写 readObject 方法 "),e("a",wt,[t("Write readObject methods defensively"),n(r)])]),e("li",null,[t("Item89: 对于实例控制，枚举类型优于 readResolve "),e("a",Pt,[t("For instance control, prefer enum types to readResolve"),n(r)])]),e("li",null,[t("Item90: 考虑以序列化代理代替序列化实例 "),e("a",jt,[t("Consider serialization proxies instead of serialized instances"),n(r)])])]),i(" markdownlint-enable MD013 ")])}const Mt=a(h,[["render",zt],["__file","b02-effective-java-3rd.html.vue"]]);export{Mt as default};
